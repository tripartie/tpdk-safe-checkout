name: Continuous Delivery (Publish)

permissions:
  contents: write
  deployments: write
  id-token: write
  packages: write

on:
  workflow_dispatch:

jobs:

  publish_java:
    runs-on: ubuntu-latest

    environment:
      name: maven

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Maven Repository
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Publish package
        run: mvn --batch-mode deploy -DaltDeploymentRepository="github::default::https://maven.pkg.github.com/tripartie/tpdk-safe-checkout"
        working-directory: ./java
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  publish_typescript:

    runs-on: ubuntu-latest

    environment:
      name: npm
      url: "https://www.npmjs.com/package/@tripartie/safe-checkout"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        name: Setup node
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install
        working-directory: ./typescript

      - name: Build package
        run: npm run build
        working-directory: ./typescript

      - name: Config auth
        working-directory: ./typescript
        run: npm config set //registry.npmjs.org/:_authToken=${{ secrets.NPM_PACKAGE_TOKEN }}

      - name: Publish package
        run: npm publish --access public
        working-directory: ./typescript

  publish_python:

    environment:
      name: pypi
      url: https://pypi.org/project/tpdk-safe-checkout

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install build
        run: pip install build

      - name: Build package
        run: python -m build
        working-directory: ./python

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: ./python/dist

  publish_tag:

    runs-on: ubuntu-latest

    needs:
      - publish_typescript
      - publish_python
      - publish_java

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - run: sudo apt install -y jq
        name: Install JQ

      - run: curl ${{ vars.OPENAPI_SCHEMA_HTTP }} -o oas-upstream.json
        name: Download latest OpenAPI

      - run: echo tag=`cat oas-upstream.json | jq .info.version | tr -d '"\n'` >> "$GITHUB_OUTPUT"
        name: Determine schema version
        id: version

      - uses: ncipollo/release-action@v1
        with:
          tag: v${{ steps.version.outputs.tag }}
          body: |
            The CHANGES are available in the [technical hub](https://hub.tripartie.com).
            Create an issue in this repository to gain support for the tpdk low-level client.
            The versioning match the API schema'.
