openapi: 3.1.0
info:
  contact:
    email: noc@tripartie.com
    name: Tripartie SAS
    url: https://tripartie.com
  description: "Simple, yet elegant web interfaces for your convenience. One request\
    \ away from your first secured C2C transaction."
  title: Safe Checkout
  version: 2.0.35
servers:
- description: Sandbox
  url: https://staging-api.tripartie.app
- description: Production
  url: https://api.tripartie.app
- description: Development
  url: https://api.tripartie.dev
security:
- oauth: []
- jwtPersonalKey: []
tags:
- description: Secure your C2C transactions with utmost ease
  name: Safe-Checkout
- description: Common shared knowledge of your users
  name: Persona
- description: Be kept up-to-date if anything happens
  name: Webhook
- description: Customize the appearance of the front application so that your customer
    would recognize it as your own
  name: Branding
- description: Internal access for our users
  name: User
- description: Internal access for administration purposes
  name: Admin
- description: Internal access for our checkout tunnel
  name: Transaction
paths:
  /api-clients:
    get:
      deprecated: false
      description: Retrieves the collection of ApiClient resources.
      operationId: api_api-clients_get_collection
      parameters:
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: The collection page number
        explode: false
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiClient-Read'
                type: array
          description: ApiClient collection
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
            Content-Range:
              description: "HTTP standardized header for partial content, used for\
                \ the pagination"
              explode: false
              schema:
                example: 0-50/28441
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Retrieves the collection of ApiClient resources.
      tags:
      - Admin
      x-accepts:
      - application/json
    post:
      deprecated: false
      description: Creates a ApiClient resource.
      operationId: api_api-clients_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiClient-Write'
        description: The new ApiClient resource
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClient-PostCreationRead'
          description: ApiClient resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Creates a ApiClient resource.
      tags:
      - Admin
      x-content-type: application/json
      x-accepts:
      - application/json
  /api-clients/{identifier}:
    delete:
      deprecated: false
      description: Removes the ApiClient resource.
      operationId: api_api-clients_identifier_delete
      parameters:
      - allowReserved: false
        deprecated: false
        description: ApiClient identifier
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ApiClient resource deleted
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Removes the ApiClient resource.
      tags:
      - Admin
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: Retrieves a ApiClient resource.
      operationId: api_api-clients_identifier_get
      parameters:
      - allowReserved: false
        deprecated: false
        description: ApiClient identifier
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClient-Read'
          description: ApiClient resource
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Retrieves a ApiClient resource.
      tags:
      - Admin
      x-accepts:
      - application/json
  /authentication:
    post:
      description: "This endpoint is protected by a captcha, do not try to use it\
        \ to consume our API. IP/CIDR to be banned upon fraudulent/irregular usage.\
        \ Follow the oauth 2.0 authentication challenge as described in the documentation."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserJwtWrite'
        description: ""
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserJwtCreated'
          description: ""
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageError'
          description: ""
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: User authentication
      tags:
      - User
      - Admin
      x-content-type: application/json
      x-accepts:
      - application/json
  /bank-accounts:
    post:
      deprecated: false
      description: Creates a BankAccount resource.
      operationId: api_bank-accounts_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccount-Write'
        description: The new BankAccount resource
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount-Read'
          description: BankAccount resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Creates a BankAccount resource.
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
  /bank-accounts/{id}:
    delete:
      deprecated: false
      description: Removes the BankAccount resource.
      operationId: api_bank-accounts_id_delete
      parameters:
      - allowReserved: false
        deprecated: false
        description: BankAccount identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: BankAccount resource deleted
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Removes the BankAccount resource.
      tags:
      - User
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: Retrieves a BankAccount resource.
      operationId: api_bank-accounts_id_get
      parameters:
      - allowReserved: false
        deprecated: false
        description: BankAccount identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount-Read'
          description: BankAccount resource
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Retrieves a BankAccount resource.
      tags:
      - User
      x-accepts:
      - application/json
  /cards:
    get:
      deprecated: false
      description: Retrieves the collection of Card resources.
      operationId: api_cards_get_collection
      parameters:
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: The collection page number
        explode: false
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Card-CollectionRead'
                type: array
          description: Card collection
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
            Content-Range:
              description: "HTTP standardized header for partial content, used for\
                \ the pagination"
              explode: false
              schema:
                example: 0-50/28441
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Retrieves the collection of Card resources.
      tags:
      - User
      x-accepts:
      - application/json
    post:
      deprecated: false
      description: Creates a Card resource.
      operationId: api_cards_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Card-Write'
        description: The new Card resource
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card-Read'
          description: Card resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Creates a Card resource.
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
  /cards/{id}:
    delete:
      deprecated: false
      description: Removes the Card resource.
      operationId: api_cards_id_delete
      parameters:
      - allowReserved: false
        deprecated: false
        description: Card identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Card resource deleted
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Removes the Card resource.
      tags:
      - User
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: Retrieves a Card resource.
      operationId: api_cards_id_get
      parameters:
      - allowReserved: false
        deprecated: false
        description: Card identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card-Read'
          description: Card resource
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Retrieves a Card resource.
      tags:
      - User
      x-accepts:
      - application/json
    patch:
      deprecated: false
      description: Updates the Card resource.
      operationId: api_cards_id_patch
      parameters:
      - allowReserved: false
        deprecated: false
        description: Card identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Card-Update'
        description: The updated Card resource
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card-Read'
          description: Card resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Push back the tokenization output from the external provider
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
  /cash-outs:
    get:
      deprecated: false
      description: Retrieves the collection of CashOut resources.
      operationId: api_cash-outs_get_collection
      parameters:
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: The collection page number
        explode: false
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Cashout-CashOut-CollectionRead'
                type: array
          description: CashOut collection
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
            Content-Range:
              description: "HTTP standardized header for partial content, used for\
                \ the pagination"
              explode: false
              schema:
                example: 0-50/28441
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Retrieves the collection of CashOut resources.
      tags:
      - User
      x-accepts:
      - application/json
    post:
      deprecated: false
      description: Creates a CashOut resource.
      operationId: api_cash-outs_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cashout-CashOut-Write'
        description: The new CashOut resource
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cashout-CashOut-Read'
          description: CashOut resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Withdraw the full amount available in the user wallet to set bank account
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
  /cash-outs/{id}:
    get:
      deprecated: false
      description: Retrieves a CashOut resource.
      operationId: api_cash-outs_id_get
      parameters:
      - allowReserved: false
        deprecated: false
        description: CashOut identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cashout-CashOut-Read'
          description: CashOut resource
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Retrieves a CashOut resource.
      tags:
      - User
      x-accepts:
      - application/json
  /invite:
    post:
      deprecated: false
      description: Invite a user to your organization workspace
      operationId: api_invite_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-Invite'
        description: The new User resource
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-PostRegisterRead'
          description: User resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Organization invite
      tags:
      - Admin
      x-content-type: application/json
      x-accepts:
      - application/json
  /me:
    get:
      deprecated: false
      description: Retrieves a User resource.
      operationId: api_me_get
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-AuthenticatedRead'
          description: User resource
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Retrieves a User resource.
      tags:
      - User
      x-accepts:
      - application/json
  /offers:
    get:
      deprecated: false
      description: Retrieves the collection of Offer resources.
      operationId: api_offers_get_collection
      parameters:
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: The collection page number
        explode: false
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: title
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: publicUrl
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: true
        in: query
        name: "publicUrl[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: unitPrice
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: true
        in: query
        name: "unitPrice[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: itemCount
        required: false
        schema:
          type: integer
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: true
        in: query
        name: "itemCount[]"
        required: false
        schema:
          items:
            type: integer
          type: array
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "createdAt[before]"
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "createdAt[strictly_before]"
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "createdAt[after]"
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "createdAt[strictly_after]"
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: Flattened OrderedMap for metadata. Must be a multiple of two
          items count. Explicitly set "null" for desired value.
        example:
        - External-ID
        - 1254A
        explode: true
        in: query
        name: "metadata[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: deepObject
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: Flattened OrderedMap for offer.metadata. Must be a multiple of
          two items count. Explicitly set "null" for desired value.
        example:
        - External-ID
        - 1254A
        explode: true
        in: query
        name: "offer.metadata[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: deepObject
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: Flattened OrderedMap for seller.metadata. Must be a multiple
          of two items count. Explicitly set "null" for desired value.
        example:
        - External-ID
        - 1254A
        explode: true
        in: query
        name: "seller.metadata[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: deepObject
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: Filter on a limited subset of nature
        example: service
        explode: false
        in: query
        name: nature
        required: false
        schema:
          enum:
          - service
          - physical_item
          - dematerialized_item
          - rent_item
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: Filter on a limited subset of condition
        example: NEW
        explode: false
        in: query
        name: condition
        required: false
        schema:
          enum:
          - NEW
          - USED
          - DAMAGED
          - DETERIORATED
          - UNRECOVERABLE
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: Filter on a limited subset of status
        example: issued
        explode: false
        in: query
        name: status
        required: false
        schema:
          enum:
          - issued
          - active
          - fulfilled
          - expired
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: shippingAllowed
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Offer-CollectionRead'
                type: array
          description: Offer collection
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
            Content-Range:
              description: "HTTP standardized header for partial content, used for\
                \ the pagination"
              explode: false
              schema:
                example: 0-50/28441
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - OFFER_READ
        jwtPersonalKey: []
      summary: Search amongst Offers
      tags:
      - Safe-Checkout
      x-accepts:
      - application/json
    post:
      deprecated: false
      description: Create a public listening Offer linked to a specific Seller
      operationId: api_offers_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Offer-IndependentWrite'
        description: The new Offer resource
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer-PostCreationRead'
          description: Offer resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - OFFER_WRITE
        - PERSONA_WRITE
      summary: Create a public link for Offer
      tags:
      - Safe-Checkout
      x-content-type: application/json
      x-accepts:
      - application/json
  /offers/{ulid}:
    delete:
      deprecated: false
      description: Make a specific Offer as non longer active
      operationId: api_offers_ulid_delete
      parameters:
      - allowReserved: false
        deprecated: false
        description: Offer identifier
        explode: false
        in: path
        name: ulid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Offer resource deleted
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - OFFER_WRITE
        jwtPersonalKey: []
      summary: Disable existing Offer
      tags:
      - Safe-Checkout
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: Retrieves a Offer resource.
      operationId: api_offers_ulid_get
      parameters:
      - allowReserved: false
        deprecated: false
        description: Offer identifier
        explode: false
        in: path
        name: ulid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer-Read'
          description: Offer resource
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Fetch a Offer details
      tags:
      - Safe-Checkout
      x-accepts:
      - application/json
    patch:
      deprecated: false
      description: Update your existing Offer and reuse existing generated link
      operationId: api_offers_ulid_patch
      parameters:
      - allowReserved: false
        deprecated: false
        description: Offer identifier
        explode: false
        in: path
        name: ulid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Offer-Update'
        description: The updated Offer resource
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer-PostCreationRead'
          description: Offer resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - OFFER_WRITE
        jwtPersonalKey: []
      summary: Update existing Offer
      tags:
      - Safe-Checkout
      x-content-type: application/json
      x-accepts:
      - application/json
  /offers/{ulid}/medias:
    post:
      deprecated: false
      description: Creates a Media resource.
      operationId: api_offers_ulidmedias_post
      parameters:
      - allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: path
        name: ulid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/api_offers_ulidmedias_post_request'
        description: The binary media file as-is
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media-Read'
          description: Media resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - OFFER_WRITE
        personaAuthKey: []
      summary: Upload a picture for a given Offer
      tags:
      - Safe-Checkout
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /offers/{ulid}/medias/{id}:
    delete:
      deprecated: false
      description: Removes the Media resource.
      operationId: api_offers_ulidmedias_id_delete
      parameters:
      - allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: path
        name: ulid
        required: true
        schema:
          type: string
        style: simple
      - allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: Media resource deleted
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - OFFER_WRITE
        personaAuthKey: []
        jwtPersonalKey: []
      summary: Removes the Media resource.
      tags:
      - Safe-Checkout
      x-accepts:
      - application/json
  /organizations:
    get:
      deprecated: false
      description: Retrieves the collection of Organization resources.
      operationId: api_organizations_get_collection
      parameters:
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: The collection page number
        explode: false
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: The number of items per page
        explode: false
        in: query
        name: itemsPerPage
        required: false
        schema:
          default: 30
          minimum: 0
          type: integer
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Organization-CollectionRead'
                type: array
          description: Organization collection
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
            Content-Range:
              description: "HTTP standardized header for partial content, used for\
                \ the pagination"
              explode: false
              schema:
                example: 0-50/28441
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Retrieves the collection of Organization resources.
      tags:
      - Admin
      x-accepts:
      - application/json
  /organizations/{id}:
    get:
      deprecated: false
      description: Retrieves a Organization resource.
      operationId: api_organizations_id_get
      parameters:
      - allowReserved: false
        deprecated: false
        description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-Read'
          description: Organization resource
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Retrieves a Organization resource.
      tags:
      - Admin
      x-accepts:
      - application/json
    patch:
      deprecated: false
      description: Updates the Organization resource.
      operationId: api_organizations_id_patch
      parameters:
      - allowReserved: false
        deprecated: false
        description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization-Update'
        description: The updated Organization resource
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-Organization-Read'
          description: Organization resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: "Update your Organization details, branding or parameters"
      tags:
      - Branding
      x-content-type: application/json
      x-accepts:
      - application/json
  /organizations/{id}/icon:
    delete:
      deprecated: false
      description: Removes the Media resource.
      operationId: api_organizations_idicon_delete
      parameters:
      - allowReserved: false
        deprecated: false
        description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: Media resource deleted
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Unset your Organization Icon
      tags:
      - Branding
      x-accepts:
      - application/json
    post:
      deprecated: false
      description: Creates a Media resource.
      operationId: api_organizations_idicon_post
      parameters:
      - allowReserved: false
        deprecated: false
        description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/api_offers_ulidmedias_post_request'
        description: The binary media file as-is
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media-Read'
          description: Media resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Upload your Organization Icon
      tags:
      - Branding
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /organizations/{id}/logo:
    delete:
      deprecated: false
      description: Removes the Media resource.
      operationId: api_organizations_idlogo_delete
      parameters:
      - allowReserved: false
        deprecated: false
        description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: Media resource deleted
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Unset your Organization Logo
      tags:
      - Branding
      x-accepts:
      - application/json
    post:
      deprecated: false
      description: Creates a Media resource.
      operationId: api_organizations_idlogo_post
      parameters:
      - allowReserved: false
        deprecated: false
        description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/api_offers_ulidmedias_post_request'
        description: The binary media file as-is
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media-Read'
          description: Media resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Upload your Organization logo
      tags:
      - Branding
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /personas:
    get:
      deprecated: false
      description: Retrieves the collection of Persona resources.
      operationId: api_personas_get_collection
      parameters:
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: The collection page number
        explode: false
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: firstName
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: lastName
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: true
        in: query
        name: "email[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: mobilePhoneNumber
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: true
        in: query
        name: "mobilePhoneNumber[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: Filter on a limited subset of gender
        example: MALE
        explode: false
        in: query
        name: gender
        required: false
        schema:
          enum:
          - MALE
          - FEMALE
          - OTHER
          - RATHER_NOT_SAY
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "order[createdAt]"
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "createdAt[before]"
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "createdAt[strictly_before]"
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "createdAt[after]"
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "createdAt[strictly_after]"
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "dateOfBirth[before]"
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "dateOfBirth[strictly_before]"
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "dateOfBirth[after]"
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "dateOfBirth[strictly_after]"
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: Flattened OrderedMap for metadata. Must be a multiple of two
          items count. Explicitly set "null" for desired value.
        example:
        - External-ID
        - 1254A
        explode: true
        in: query
        name: "metadata[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: deepObject
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Persona-CollectionRead'
                type: array
          description: Persona collection
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
            Content-Range:
              description: "HTTP standardized header for partial content, used for\
                \ the pagination"
              explode: false
              schema:
                example: 0-50/28441
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - PERSONA_READ
        jwtPersonalKey: []
      summary: Retrieves the collection of Persona resources.
      tags:
      - Persona
      x-accepts:
      - application/json
    post:
      deprecated: false
      description: |-
        You should not register your whole database of users, only those who are concerned by a Transaction operation.
        One Persona entry for your organization can be assigned as a seller or buyer.

        **Notes:**
          - (i) There is a unique constraint for the mobile phone numbers and email.
          - (ii) You will have to issue a DELETE operation on a Persona that withhold a specific phone number or email.
          - (iii) You are NOT REQUIRED to provide email OR a mobile phone number but it is highly recommended, if none provided the email will be generated as '{ulid}@your-domain.tld'. In that case, please specify at least one metadata in order to find your entry with ease.
      operationId: api_personas_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Persona-Write'
        description: The new Persona resource
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Persona-Read'
          description: Persona resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - PERSONA_WRITE
      summary: Register a Persona (Your customer)
      tags:
      - Persona
      x-content-type: application/json
      x-accepts:
      - application/json
  /personas/{id}:
    delete:
      deprecated: false
      description: |-
        You **MAY** unregister (or free the email/phone number) your Persona entry using that endpoint.
        *Please note that* this operation will fail if that Persona have any ongoing operations.
      operationId: api_personas_id_delete
      parameters:
      - allowReserved: false
        deprecated: false
        description: Persona identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Persona resource deleted
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - PERSONA_WRITE
        jwtPersonalKey: []
        personaAuthKey: []
      summary: Unregister a Persona (Your customer)
      tags:
      - Persona
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: Retrieves a Persona resource.
      operationId: api_personas_id_get
      parameters:
      - allowReserved: false
        deprecated: false
        description: Persona identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Persona-Read'
          description: Persona resource
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - PERSONA_READ
        jwtPersonalKey: []
        personaAuthKey: []
      summary: Retrieves a Persona resource.
      tags:
      - Persona
      x-accepts:
      - application/json
    patch:
      deprecated: false
      description: Update your Persona (eg. your customer/user entry) through that
        API call. _Beware that updating_ **email** and/or the **mobile phone number**
        must be done using non reserved values. Otherwise this operation will be rejected.
      operationId: api_personas_id_patch
      parameters:
      - allowReserved: false
        deprecated: false
        description: Persona identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Persona-Update'
        description: The updated Persona resource
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Persona-Read'
          description: Persona resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - PERSONA_WRITE
        jwtPersonalKey: []
        personaAuthKey: []
      summary: Updates the Persona resource.
      tags:
      - Persona
      x-content-type: application/json
      x-accepts:
      - application/json
  /proof-of-identities:
    get:
      deprecated: false
      description: Retrieves the collection of ProofOfIdentity resources.
      operationId: api_proof-of-identities_get_collection
      parameters:
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: The collection page number
        explode: false
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProofOfIdentity-CollectionRead'
                type: array
          description: ProofOfIdentity collection
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
            Content-Range:
              description: "HTTP standardized header for partial content, used for\
                \ the pagination"
              explode: false
              schema:
                example: 0-50/28441
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: List all submitted PoI
      tags:
      - User
      x-accepts:
      - application/json
    post:
      deprecated: false
      description: Creates a ProofOfIdentity resource.
      operationId: api_proof-of-identities_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProofOfIdentity-Write'
        description: The new ProofOfIdentity resource
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProofOfIdentity-Read'
          description: ProofOfIdentity resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Submit a slot for a PoI
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
  /proof-of-identities/{id}:
    get:
      deprecated: false
      description: Retrieves a ProofOfIdentity resource.
      operationId: api_proof-of-identities_id_get
      parameters:
      - allowReserved: false
        deprecated: false
        description: ProofOfIdentity identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProofOfIdentity-Read'
          description: ProofOfIdentity resource
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Retrieve a specific PoI
      tags:
      - User
      x-accepts:
      - application/json
    patch:
      deprecated: false
      description: Updates the ProofOfIdentity resource.
      operationId: api_proof-of-identities_id_patch
      parameters:
      - allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/api_offers_ulidmedias_post_request'
        description: The binary media file as-is
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProofOfIdentity-Read'
          description: ProofOfIdentity resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Upload the document for your PoI slot
      tags:
      - User
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /quotes:
    post:
      deprecated: false
      description: Creates a Quote resource.
      operationId: api_quotes_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quote-Write'
        description: The new Quote resource
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote-Read'
          description: Quote resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Create a Quote prior to issuing a Transaction
      tags:
      - Transaction
      x-content-type: application/json
      x-accepts:
      - application/json
  /quotes/{id}:
    get:
      deprecated: false
      description: Retrieves a Quote resource.
      operationId: api_quotes_id_get
      parameters:
      - allowReserved: false
        deprecated: false
        description: Quote identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote-Read'
          description: Quote resource
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Retrieve a Quote
      tags:
      - Transaction
      x-accepts:
      - application/json
    patch:
      deprecated: false
      description: Updates the Quote resource.
      operationId: api_quotes_id_patch
      parameters:
      - allowReserved: false
        deprecated: false
        description: Quote identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quote-Update'
        description: The updated Quote resource
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote-Read'
          description: Quote resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Update a Quote prior to issuing a Transaction
      tags:
      - Transaction
      x-content-type: application/json
      x-accepts:
      - application/json
  /register:
    post:
      deprecated: false
      description: "Internal-use only, protected by a captcha. User first-enrollment"
      operationId: api_register_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-Write'
        description: The new User resource
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-PostRegisterRead'
          description: User resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Customer onboarding
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
  /transactions:
    get:
      deprecated: false
      description: Retrieve a list of Transaction paginated
      operationId: api_transactions_get_collection
      parameters:
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: The collection page number
        explode: false
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "order[createdAt]"
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "order[status]"
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "createdAt[before]"
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "createdAt[strictly_before]"
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "createdAt[after]"
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "createdAt[strictly_after]"
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: Filter on a limited subset of status
        example: CREATED
        explode: false
        in: query
        name: status
        required: false
        schema:
          enum:
          - CREATED
          - AUTHORIZED
          - REFUSED
          - ACCEPTED
          - SHIPPED
          - IN_TRANSIT
          - BLOCKED
          - DELIVERED
          - COMPLETED
          - DISPUTED
          - CANCELLED
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Transaction-CollectionRead'
                type: array
          description: Transaction collection
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
            Content-Range:
              description: "HTTP standardized header for partial content, used for\
                \ the pagination"
              explode: false
              schema:
                example: 0-50/28441
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: List all Transaction
      tags:
      - Transaction
      x-accepts:
      - application/json
    post:
      deprecated: false
      description: Create a new Transaction for Preauthorization
      operationId: api_transactions_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction-Write'
        description: The new Transaction resource
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction-Read'
          description: Transaction resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Initialize a new Transaction
      tags:
      - Transaction
      x-content-type: application/json
      x-accepts:
      - application/json
  /transactions/{ulid}:
    get:
      deprecated: false
      description: Retrieve a single Transaction by ID
      operationId: api_transactions_ulid_get
      parameters:
      - allowReserved: false
        deprecated: false
        description: Transaction identifier
        explode: false
        in: path
        name: ulid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction-Read'
          description: Transaction resource
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Get a Transaction
      tags:
      - Transaction
      x-accepts:
      - application/json
    patch:
      deprecated: false
      description: Make decision upon a Transaction in order to make it evolve
      operationId: api_transactions_ulid_patch
      parameters:
      - allowReserved: false
        deprecated: false
        description: Transaction identifier
        explode: false
        in: path
        name: ulid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction-Update'
        description: The updated Transaction resource
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction-Read'
          description: Transaction resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Interact with a Transaction
      tags:
      - Transaction
      x-content-type: application/json
      x-accepts:
      - application/json
  /users:
    get:
      deprecated: false
      description: Retrieves the collection of User resources.
      operationId: api_users_get_collection
      parameters:
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: The collection page number
        explode: false
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User-CollectionRead'
                type: array
          description: User collection
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
            Content-Range:
              description: "HTTP standardized header for partial content, used for\
                \ the pagination"
              explode: false
              schema:
                example: 0-50/28441
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Retrieves the collection of User resources.
      tags:
      - Admin
      x-accepts:
      - application/json
  /users/{id}:
    delete:
      deprecated: false
      description: Removes the User resource.
      operationId: api_users_id_delete
      parameters:
      - allowReserved: false
        deprecated: false
        description: User identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: User resource deleted
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Removes the User resource.
      tags:
      - User
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: Retrieves a User resource.
      operationId: api_users_id_get
      parameters:
      - allowReserved: false
        deprecated: false
        description: User identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-SupportRead'
          description: User resource
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Retrieves a User resource.
      tags:
      - Admin
      x-accepts:
      - application/json
    patch:
      deprecated: false
      description: Updates the User resource.
      operationId: api_users_id_patch
      parameters:
      - allowReserved: false
        deprecated: false
        description: User identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-Update'
        description: The updated User resource
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-PostRegisterRead'
          description: User resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Update your profile
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
  /users/{id}/avatar:
    delete:
      deprecated: false
      description: Removes the Media resource.
      operationId: api_users_idavatar_delete
      parameters:
      - allowReserved: false
        deprecated: false
        description: User identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: Media resource deleted
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Unset your personal avatar
      tags:
      - User
      x-accepts:
      - application/json
    post:
      deprecated: false
      description: Creates a Media resource.
      operationId: api_users_idavatar_post
      parameters:
      - allowReserved: false
        deprecated: false
        description: User identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/api_offers_ulidmedias_post_request'
        description: The binary media file as-is
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media-Read'
          description: Media resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Upload your personal avatar
      tags:
      - User
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /users/{id}/disable:
    patch:
      deprecated: false
      description: Updates the User resource.
      operationId: api_users_iddisable_patch
      parameters:
      - allowReserved: false
        deprecated: false
        description: User identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: The updated User resource
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-user.subscribed'
          description: User resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Updates the User resource.
      tags:
      - Admin
      x-content-type: application/json
      x-accepts:
      - application/json
  /users/{id}/email:
    patch:
      deprecated: false
      description: Updates the User resource.
      operationId: api_users_idemail_patch
      parameters:
      - allowReserved: false
        deprecated: false
        description: User identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-UserEmailUpdate'
        description: The updated User resource
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-UserRead'
          description: User resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Update user email
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
  /users/{id}/email-validation:
    patch:
      deprecated: false
      description: Updates the User resource.
      operationId: api_users_idemail-validation_patch
      parameters:
      - allowReserved: false
        deprecated: false
        description: User identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-EmailValidationWrite'
        description: The updated User resource
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-PostRegisterRead'
          description: User resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Validate email ownership
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
  /users/{id}/enable:
    patch:
      deprecated: false
      description: Updates the User resource.
      operationId: api_users_idenable_patch
      parameters:
      - allowReserved: false
        deprecated: false
        description: User identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-UserEnableWrite'
        description: The updated User resource
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-user.subscribed'
          description: User resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Updates the User resource.
      tags:
      - Admin
      x-content-type: application/json
      x-accepts:
      - application/json
  /users/{id}/offers:
    post:
      deprecated: false
      description: Create a public listening Offer linked to a specific User
      operationId: api_users_idoffers_post
      parameters:
      - allowReserved: false
        deprecated: false
        description: User identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Offer-SoloWrite'
        description: The new Offer resource
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer-PostCreationRead'
          description: Offer resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalToken: []
      summary: Issue an Offer as User
      tags:
      - Safe-Checkout
      x-content-type: application/json
      x-accepts:
      - application/json
  /users/{id}/password:
    patch:
      deprecated: false
      description: Updates the User resource.
      operationId: api_users_idpassword_patch
      parameters:
      - allowReserved: false
        deprecated: false
        description: User identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-UserPasswordUpdate'
        description: The updated User resource
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-UserRead'
          description: User resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Change your password
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
  /users/{id}/totp-setup:
    patch:
      deprecated: false
      description: Updates the User resource.
      operationId: api_users_idtotp-setup_patch
      parameters:
      - allowReserved: false
        deprecated: false
        description: User identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-TotpSetupWrite'
        description: The updated User resource
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-TotpSetupRead'
          description: User resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Setup an additional authentication factor
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
  /users/{id}/totp-toggle:
    patch:
      deprecated: false
      description: Updates the User resource.
      operationId: api_users_idtotp-toggle_patch
      parameters:
      - allowReserved: false
        deprecated: false
        description: User identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-TotpToggleWrite'
        description: The updated User resource
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-TotpToggleRead'
          description: User resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Disable the second authentication factor
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
  /webhook-histories:
    get:
      deprecated: false
      description: Retrieves the collection of WebhookHistory resources.
      operationId: api_webhook-histories_get_collection
      parameters:
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: The collection page number
        explode: false
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: event
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: true
        in: query
        name: "event[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: objectId
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: true
        in: query
        name: "objectId[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WebhookHistory-CollectionRead'
                type: array
          description: WebhookHistory collection
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
            Content-Range:
              description: "HTTP standardized header for partial content, used for\
                \ the pagination"
              explode: false
              schema:
                example: 0-50/28441
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - ORGANIZATION_READ
        jwtPersonalKey: []
      summary: Retrieves the collection of WebhookHistory resources.
      tags:
      - Webhook
      x-accepts:
      - application/json
  /webhook-histories/{id}:
    get:
      deprecated: false
      description: Retrieves a WebhookHistory resource.
      operationId: api_webhook-histories_id_get
      parameters:
      - allowReserved: false
        deprecated: false
        description: WebhookHistory identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookHistory-Read'
          description: WebhookHistory resource
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - ORGANIZATION_READ
        jwtPersonalKey: []
      summary: Retrieves a WebhookHistory resource.
      tags:
      - Webhook
      x-accepts:
      - application/json
    put:
      deprecated: false
      description: Replaces the WebhookHistory resource.
      operationId: api_webhook-histories_id_put
      parameters:
      - allowReserved: false
        deprecated: false
        description: WebhookHistory identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookHistory'
        description: The updated WebhookHistory resource
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookHistory-Read'
          description: WebhookHistory resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Replay a Webhook that ended up in failure
      tags:
      - Webhook
      x-content-type: application/json
      x-accepts:
      - application/json
  /webhook-subscriptions:
    get:
      deprecated: false
      description: Retrieves the collection of WebhookSubscription resources.
      operationId: api_webhook-subscriptions_get_collection
      parameters:
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: The collection page number
        explode: false
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: Filter on a limited subset of event
        example: offer.transaction.authorized
        explode: false
        in: query
        name: event
        required: false
        schema:
          enum:
          - offer.transaction.authorized
          - offer.transaction.accepted
          - offer.transaction.shipped
          - offer.transaction.delivered
          - offer.transaction.completed
          - offer.transaction.canceled
          - offer.transaction.disputed
          - offer.closed
          - persona.added
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WebhookSubscription-Read'
                type: array
          description: WebhookSubscription collection
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
            Content-Range:
              description: "HTTP standardized header for partial content, used for\
                \ the pagination"
              explode: false
              schema:
                example: 0-50/28441
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - ORGANIZATION_READ
        jwtPersonalKey: []
      summary: Retrieves the collection of WebhookSubscription resources.
      tags:
      - Webhook
      x-accepts:
      - application/json
    post:
      callbacks:
        onData:
          '{$request.body#/callbackUrl}':
            post:
              description: |-
                The received payload MUST be verified using hmac-sha256.
                                            The actual checksum/sha256 to match is located in X-Tripartie-Signature header.
              operationId: onDataPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/Webhook'
              responses:
                "200":
                  description: Your endpoint MUST respond with ANY successful http
                    code in the 2XX range. Will be re-sent up to 8 times otherwise.
              x-callback-request: true
      deprecated: false
      description: Creates a WebhookSubscription resource.
      operationId: api_webhook-subscriptions_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookSubscription-Write'
        description: The new WebhookSubscription resource
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookSubscription-Read'
          description: WebhookSubscription resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Subscribe to Event(s)
      tags:
      - Webhook
      x-content-type: application/json
      x-accepts:
      - application/json
  /webhook-subscriptions/{id}:
    delete:
      deprecated: false
      description: Removes the WebhookSubscription resource.
      operationId: api_webhook-subscriptions_id_delete
      parameters:
      - allowReserved: false
        deprecated: false
        description: WebhookSubscription identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: WebhookSubscription resource deleted
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Removes the WebhookSubscription resource.
      tags:
      - Webhook
      x-accepts:
      - application/json
components:
  examples: {}
  headers: {}
  parameters: {}
  requestBodies: {}
  responses: {}
  schemas:
    Address:
      deprecated: false
      description: ""
      properties:
        id:
          readOnly: true
          type: integer
        companyName:
          example: Company Tld
          nullable: true
          type: string
        countryCode:
          example: FRA
          maxLength: 3
          type: string
        zipCode:
          example: "75004"
          type: string
        cityName:
          example: Paris
          type: string
        firstLine:
          example: 118 avenue des champs élysées
          type: string
        secondLine:
          example: Apt 6E
          nullable: true
          type: string
        buildingName:
          example: Electron
          nullable: true
          type: string
        buildingFloor:
          example: Third floor
          nullable: true
          type: string
        gateOrPortalOrInboxCode:
          example: "3124"
          nullable: true
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        formattedAddress:
          example: "118 rue Henry Barbin, 72100 LE MANS, FRANCE"
          readOnly: true
          type: string
    Address-UserRead:
      deprecated: false
      description: ""
      example:
        zipCode: "75004"
        buildingName: Electron
        cityName: Paris
        formattedAddress: "118 rue Henry Barbin, 72100 LE MANS, FRANCE"
        countryCode: FRA
        companyName: Company Tld
        secondLine: Apt 6E
        firstLine: 118 avenue des champs élysées
        buildingFloor: Third floor
        gateOrPortalOrInboxCode: "3124"
      properties:
        companyName:
          example: Company Tld
          nullable: true
          type: string
        countryCode:
          example: FRA
          maxLength: 3
          type: string
        zipCode:
          example: "75004"
          type: string
        cityName:
          example: Paris
          type: string
        firstLine:
          example: 118 avenue des champs élysées
          type: string
        secondLine:
          example: Apt 6E
          nullable: true
          type: string
        buildingName:
          example: Electron
          nullable: true
          type: string
        buildingFloor:
          example: Third floor
          nullable: true
          type: string
        gateOrPortalOrInboxCode:
          example: "3124"
          nullable: true
          type: string
        formattedAddress:
          example: "118 rue Henry Barbin, 72100 LE MANS, FRANCE"
          readOnly: true
          type: string
    ApiClient-PostCreationRead:
      deprecated: false
      description: ""
      example:
        identifier: identifier
        name: name
        secret: ""
      properties:
        identifier:
          type: string
        secret: {}
        name:
          type: string
    ApiClient-Read:
      deprecated: false
      description: ""
      example:
        identifier: identifier
        createdAt: 2000-01-23T04:56:07.000+00:00
        name: name
        scopes:
        - OFFER_READ
        - ORGANIZATION_READ
      properties:
        identifier:
          maxLength: 32
          type: string
        createdAt:
          format: date-time
          type: string
        scopes:
          example:
          - OFFER_READ
          - ORGANIZATION_READ
          items:
            enum:
            - PERSONA_READ
            - PERSONA_WRITE
            - PERSONA_AUTH
            - OFFER_READ
            - OFFER_WRITE
            - ORGANIZATION_READ
            type: string
          type: array
        name:
          type: string
      required:
      - createdAt
      - identifier
    ApiClient-Write:
      deprecated: false
      description: ""
      properties:
        referenceName:
          maxLength: 32
          nullable: true
          type: string
        desiredScopes:
          example:
          - OFFER_READ
          - PERSONA_READ
          items:
            enum:
            - OFFER_READ
            - OFFER_WRITE
            - ORGANIZATION_READ
            - PERSONA_READ
            - PERSONA_WRITE
            - PERSONA_AUTH
            type: string
          minItems: 1
          type: array
    BankAccount-Read:
      deprecated: false
      description: ""
      example:
        processorStatus: unallocated
        providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
        providerCreatedAt: 2000-01-23T04:56:07.000+00:00
        providerName: providerName
      properties:
        providerName:
          nullable: true
          type: string
        providerCreatedAt:
          format: date-time
          nullable: true
          type: string
        providerUpdatedAt:
          format: date-time
          nullable: true
          type: string
        processorStatus:
          description: Automagically infer on what state the entity is at the Payment
            Processor.
          enum:
          - unallocated
          - allocating
          - allocated
          - freed
          - outdated
          readOnly: true
          type: string
    BankAccount-UserRead:
      deprecated: false
      description: ""
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        processorStatus: unallocated
        providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
        iban: iban
        providerCreatedAt: 2000-01-23T04:56:07.000+00:00
        bic: bic
        providerName: providerName
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        iban:
          type: string
        bic:
          nullable: true
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          nullable: true
          type: string
        providerName:
          nullable: true
          type: string
        providerCreatedAt:
          format: date-time
          nullable: true
          type: string
        providerUpdatedAt:
          format: date-time
          nullable: true
          type: string
        processorStatus:
          description: Automagically infer on what state the entity is at the Payment
            Processor.
          enum:
          - unallocated
          - allocating
          - allocated
          - freed
          - outdated
          readOnly: true
          type: string
      required:
      - createdAt
    BankAccount-Write:
      deprecated: false
      description: ""
      properties:
        iban:
          externalDocs:
            url: https://schema.org/identifier
          type: string
        bic:
          externalDocs:
            url: https://schema.org/identifier
          nullable: true
          type: string
      required:
      - iban
    Card-CollectionRead:
      deprecated: false
      description: ""
      example:
        iri: https://example.com/
        metadata:
        - value: "54412"
          key: External-ID
        - value: "54412"
          key: External-ID
        providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
        primaryAccountNumber: primaryAccountNumber
        expireAt: 2000-01-23T04:56:07.000+00:00
        createdAt: 2000-01-23T04:56:07.000+00:00
        processorStatus: unallocated
        countryCode: countryCode
        currency: currency
        providerCreatedAt: 2000-01-23T04:56:07.000+00:00
        brand: VISA
        providerName: providerName
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        primaryAccountNumber:
          nullable: true
          type: string
        expireAt:
          format: date-time
          type: string
        currency:
          nullable: true
          type: string
        countryCode:
          nullable: true
          type: string
        brand:
          enum:
          - CB
          - VISA
          - MASTERCARD
          - AMEX
          - MAESTRO
          - BCMC
          - JCB
          - DISCOVER
          example: VISA
          type: string
          nullable: true
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        metadata:
          items:
            $ref: '#/components/schemas/Card-Metadata-CollectionRead'
          type: array
        providerName:
          nullable: true
          type: string
        providerCreatedAt:
          format: date-time
          nullable: true
          type: string
        providerUpdatedAt:
          format: date-time
          nullable: true
          type: string
        iri:
          example: https://example.com/
          format: iri-reference
          readOnly: true
          type: string
        processorStatus:
          description: Automagically infer on what state the entity is at the Payment
            Processor.
          enum:
          - unallocated
          - allocating
          - allocated
          - freed
          - outdated
          readOnly: true
          type: string
      required:
      - createdAt
      - expireAt
      - updatedAt
    Card-Metadata-CollectionRead:
      deprecated: false
      description: ""
      example:
        value: "54412"
        key: External-ID
      properties:
        key:
          example: External-ID
          type: string
        value:
          example: "54412"
          nullable: true
          type: string
    Card-Metadata-Read:
      deprecated: false
      description: ""
      example:
        value: "54412"
        key: External-ID
      properties:
        key:
          example: External-ID
          type: string
        value:
          example: "54412"
          nullable: true
          type: string
    Card-Metadata-Update:
      deprecated: false
      description: ""
      example:
        value: "54412"
        key: External-ID
      properties:
        key:
          example: External-ID
          type: string
        value:
          example: "54412"
          nullable: true
          type: string
    Card-Read:
      deprecated: false
      description: ""
      example:
        iri: https://example.com/
        metadata:
        - value: "54412"
          key: External-ID
        - value: "54412"
          key: External-ID
        providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
        primaryAccountNumber: primaryAccountNumber
        expireAt: 2000-01-23T04:56:07.000+00:00
        createdAt: 2000-01-23T04:56:07.000+00:00
        processorStatus: unallocated
        countryCode: countryCode
        currency: currency
        providerCreatedAt: 2000-01-23T04:56:07.000+00:00
        brand: VISA
        providerName: providerName
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        primaryAccountNumber:
          nullable: true
          type: string
        expireAt:
          format: date-time
          type: string
        currency:
          nullable: true
          type: string
        countryCode:
          nullable: true
          type: string
        brand:
          enum:
          - CB
          - VISA
          - MASTERCARD
          - AMEX
          - MAESTRO
          - BCMC
          - JCB
          - DISCOVER
          example: VISA
          type: string
          nullable: true
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        metadata:
          items:
            $ref: '#/components/schemas/Card-Metadata-Read'
          type: array
        providerName:
          nullable: true
          type: string
        providerCreatedAt:
          format: date-time
          nullable: true
          type: string
        providerUpdatedAt:
          format: date-time
          nullable: true
          type: string
        iri:
          example: https://example.com/
          format: iri-reference
          readOnly: true
          type: string
        processorStatus:
          description: Automagically infer on what state the entity is at the Payment
            Processor.
          enum:
          - unallocated
          - allocating
          - allocated
          - freed
          - outdated
          readOnly: true
          type: string
      required:
      - createdAt
      - expireAt
      - updatedAt
    Card-Update:
      deprecated: false
      description: ""
      properties:
        metadata:
          items:
            $ref: '#/components/schemas/Card-Metadata-Update'
          type: array
    Card-UserRead:
      deprecated: false
      description: ""
      example:
        iri: https://example.com/
        providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
        ephemeral: true
        primaryAccountNumber: primaryAccountNumber
        expireAt: 2000-01-23T04:56:07.000+00:00
        createdAt: 2000-01-23T04:56:07.000+00:00
        processorStatus: unallocated
        countryCode: countryCode
        currency: currency
        providerCreatedAt: 2000-01-23T04:56:07.000+00:00
        brand: VISA
        providerName: providerName
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        primaryAccountNumber:
          nullable: true
          type: string
        expireAt:
          format: date-time
          type: string
        currency:
          nullable: true
          type: string
        countryCode:
          nullable: true
          type: string
        brand:
          enum:
          - CB
          - VISA
          - MASTERCARD
          - AMEX
          - MAESTRO
          - BCMC
          - JCB
          - DISCOVER
          example: VISA
          type: string
          nullable: true
        ephemeral:
          default: true
          example: true
          type: boolean
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        providerName:
          nullable: true
          type: string
        providerCreatedAt:
          format: date-time
          nullable: true
          type: string
        providerUpdatedAt:
          format: date-time
          nullable: true
          type: string
        iri:
          example: https://example.com/
          format: iri-reference
          readOnly: true
          type: string
        processorStatus:
          description: Automagically infer on what state the entity is at the Payment
            Processor.
          enum:
          - unallocated
          - allocating
          - allocated
          - freed
          - outdated
          readOnly: true
          type: string
      required:
      - createdAt
      - expireAt
      - updatedAt
    Card-Write:
      deprecated: false
      description: ""
      properties:
        ephemeral:
          default: true
          example: true
          type: boolean
      required:
      - ephemeral
    Cashout-CashOut-CollectionRead:
      deprecated: false
      description: ""
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        amount: 6.0274563
        iban: iban
        currency: currency
        id: 0
        confirmedAt: 2000-01-23T04:56:07.000+00:00
        bic: bic
        status: created
      properties:
        id:
          readOnly: true
          type: integer
        amount:
          format: float
          type: number
        currency:
          type: string
        iban:
          type: string
        bic:
          type: string
        status:
          enum:
          - created
          - submitted
          - refused
          - blocked
          - accepted
          type: string
        createdAt:
          format: date-time
          type: string
        confirmedAt:
          format: date-time
          type: string
      required:
      - bic
      - confirmedAt
      - createdAt
      - currency
      - iban
      - status
    Cashout-CashOut-Read:
      deprecated: false
      description: ""
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        amount: 6.0274563
        processorStatus: unallocated
        providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
        iban: iban
        currency: currency
        id: 0
        providerCreatedAt: 2000-01-23T04:56:07.000+00:00
        confirmedAt: 2000-01-23T04:56:07.000+00:00
        bic: bic
        providerName: providerName
        status: created
      properties:
        id:
          readOnly: true
          type: integer
        amount:
          format: float
          type: number
        currency:
          type: string
        iban:
          type: string
        bic:
          type: string
        status:
          enum:
          - created
          - submitted
          - refused
          - blocked
          - accepted
          type: string
        createdAt:
          format: date-time
          type: string
        confirmedAt:
          format: date-time
          type: string
        providerName:
          nullable: true
          type: string
        providerCreatedAt:
          format: date-time
          nullable: true
          type: string
        providerUpdatedAt:
          format: date-time
          nullable: true
          type: string
        processorStatus:
          description: Automagically infer on what state the entity is at the Payment
            Processor.
          enum:
          - unallocated
          - allocating
          - allocated
          - freed
          - outdated
          readOnly: true
          type: string
      required:
      - bic
      - confirmedAt
      - createdAt
      - currency
      - iban
      - status
    Cashout-CashOut-Write:
      deprecated: false
      description: ""
      properties:
        captcha:
          nullable: true
          type: string
      required:
      - captcha
    Media:
      deprecated: false
      description: ""
      properties:
        id:
          readOnly: true
          type: integer
        extension:
          type: string
        filename:
          type: string
        fingerprint:
          type: string
        publicUrl:
          example: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          externalDocs:
            url: https://schema.org/url
          format: uri
          type: string
        file:
          format: binary
          nullable: true
          type: string
        b64EncodedTmpFile:
          nullable: true
          type: string
        thumbnail:
          description: Associated 374x374 pixels small thumbnail
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        original:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        owner:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        offers:
          items:
            example: https://example.com/
            format: iri-reference
            type: string
          type: array
        thumbnailUrl:
          example: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          externalDocs:
            url: https://schema.org/url
          format: uri
          nullable: true
          readOnly: true
          type: string
      required:
      - extension
      - filename
      - fingerprint
      - publicUrl
    Media-Read:
      deprecated: false
      description: ""
      example:
        publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
        id: 0
        thumbnailUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
      properties:
        id:
          readOnly: true
          type: integer
        publicUrl:
          example: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          type: string
        thumbnailUrl:
          example: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          nullable: true
          readOnly: true
          type: string
    Media-UserRead:
      deprecated: false
      description: ""
      example:
        publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
        id: 6
      properties:
        id:
          readOnly: true
          type: integer
        publicUrl:
          example: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          externalDocs:
            url: https://schema.org/url
          format: uri
          type: string
      required:
      - publicUrl
    Metadata:
      deprecated: false
      description: ""
      properties:
        id:
          readOnly: true
          type: integer
        persona:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        offer:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        card:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        key:
          example: External-ID
          type: string
        value:
          example: "54412"
          nullable: true
          type: string
    Offer:
      deprecated: false
      description: ""
      properties:
        id:
          readOnly: true
          type: integer
        ulid:
          type: string
        status:
          enum:
          - issued
          - active
          - fulfilled
          - expired
          type: string
        captcha:
          nullable: true
          type: string
        publicUrl:
          description: The public URL for your Ad/Offer on your marketplace.
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
          nullable: true
          type: string
        redirectUrl:
          description: Fill-in that field IF you intend to redirect your customer
            instead of using a WebView.
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold?checkout=true
          nullable: true
          type: string
        url:
          example: https://next.tripartie.app/?c=01ARZ3NDEKTSV4RRFFQ69G5FAV
          externalDocs:
            url: https://schema.org/url
          format: uri
          nullable: true
          readOnly: true
          type: string
        organization:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        seller:
          example: https://example.com/
          format: iri-reference
          type: string
        presetBuyer:
          description: Limit the offer to a particular buyer. Useful if the offer
            was issued from an auction for instance.
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        nature:
          default: physical_item
          description: This WILL affect the assigned workflow. Choosing service will
            disable delivery for example. Refer to our technical hub for more information.
          enum:
          - service
          - physical_item
          - dematerialized_item
          - rent_item
          example: physical_item
          type: string
        title:
          example: ASUS TUF X570-PLUS GAMING Motherboard
          type: string
        description:
          example: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\
            \ eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\
            \ ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\
            \ ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\
            \ velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\
            \ cupidatat non proident, sunt in culpa qui officia deserunt mollit anim\
            \ id est laborum."
          nullable: true
          type: string
        unitPrice:
          format: float
          type: number
        minNegotiableUnitPrice:
          format: float
          type: number
        allowToNegotiateUnitPrice:
          type: boolean
        currencyCode:
          default: EUR
          example: EUR
          type: string
        itemCount:
          default: 1
          example: 1
          type: integer
        condition:
          default: USED
          enum:
          - NEW
          - USED
          - DAMAGED
          - DETERIORATED
          - UNRECOVERABLE
          example: USED
          type: string
        weightInGram:
          description: "Accepted values between 500g (0.5kg) and 10,000g (10kg)."
          type: integer
        shippingAllowed:
          description: "That toggle allows the seller to propose shipping for its\
            \ item. If set in conjunction of shippingCarrier, the label will be automatically\
            \ generated. Also, it will restrict the carrier to the limited subset\
            \ defined."
          type: boolean
        handDeliveryAllowed:
          default: true
          description: Enable both parties to finalize the transaction in person rather
            than using delivery. A QR Code must be scanned by the seller once the
            buyer claims the product.
          example: true
          type: boolean
        shippingCarriers:
          description: "If you wish to enable automated shipping label generation\
            \ through a specific provider, specify it there."
          items:
            enum:
            - SwissPost
            - Colissimo
            - MondialRelay
            type: string
          type: array
        eanCode:
          example: "4718017388450"
          nullable: true
          type: string
        canBeSoldSeparately:
          default: true
          description: Set this flag to false to forbid a potential buyer to acquire
            less than "itemCount" item(s)
          example: true
          type: boolean
        metadata:
          items:
            $ref: '#/components/schemas/Metadata'
          type: array
        medias:
          items:
            example: https://example.com/
            format: iri-reference
            type: string
          type: array
        views:
          items:
            $ref: '#/components/schemas/View'
          type: array
        transactions:
          items:
            example: https://example.com/
            format: iri-reference
            type: string
          type: array
        quotes:
          items:
            example: https://example.com/
            format: iri-reference
            type: string
          type: array
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        presetBuyerId:
          example: 42
          nullable: true
          readOnly: true
          type: integer
        sellerId:
          example: 58
          nullable: true
          readOnly: true
          type: integer
        iri:
          example: https://example.com/
          format: iri-reference
          readOnly: true
          type: string
        halfPricePoint:
          nullable: true
          readOnly: true
          type: number
      required:
      - canBeSoldSeparately
      - currencyCode
      - handDeliveryAllowed
      - medias
      - nature
      - seller
      - shippingAllowed
      - status
      - ulid
      - url
      - views
      - weightInGram
    Offer-Address-IndependentWrite:
      deprecated: false
      description: ""
      properties:
        countryCode:
          example: FRA
          maxLength: 3
          type: string
        zipCode:
          example: "75004"
          type: string
        cityName:
          example: Paris
          type: string
        firstLine:
          example: 118 avenue des champs élysées
          type: string
        secondLine:
          example: Apt 6E
          nullable: true
          type: string
        buildingName:
          example: Electron
          nullable: true
          type: string
        buildingFloor:
          example: Third floor
          nullable: true
          type: string
        gateOrPortalOrInboxCode:
          example: "3124"
          nullable: true
          type: string
    Offer-CollectionRead:
      deprecated: false
      description: ""
      example:
        seller: https://example.com/
        unitPrice: 0.8008282
        iri: https://example.com/
        ulid: ulid
        nature: physical_item
        title: ASUS TUF X570-PLUS GAMING Motherboard
        itemCount: 1
        shippingAllowed: true
        handDeliveryAllowed: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        condition: USED
        shippingCarriers:
        - SwissPost
        - SwissPost
        allowToNegotiateUnitPrice: true
        publicUrl: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
        minNegotiableUnitPrice: 6.0274563
        currencyCode: EUR
        presetBuyer: https://example.com/
        status: issued
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        ulid:
          type: string
        status:
          enum:
          - issued
          - active
          - fulfilled
          - expired
          type: string
        publicUrl:
          description: The public URL for your Ad/Offer on your marketplace.
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
          nullable: true
          type: string
        seller:
          example: https://example.com/
          format: iri-reference
          type: string
        presetBuyer:
          description: Limit the offer to a particular buyer. Useful if the offer
            was issued from an auction for instance.
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        nature:
          default: physical_item
          description: This WILL affect the assigned workflow. Choosing service will
            disable delivery for example. Refer to our technical hub for more information.
          enum:
          - service
          - physical_item
          - dematerialized_item
          - rent_item
          example: physical_item
          type: string
        title:
          example: ASUS TUF X570-PLUS GAMING Motherboard
          type: string
        unitPrice:
          format: float
          type: number
        minNegotiableUnitPrice:
          format: float
          type: number
        allowToNegotiateUnitPrice:
          type: boolean
        currencyCode:
          default: EUR
          example: EUR
          type: string
        itemCount:
          default: 1
          example: 1
          type: integer
        condition:
          default: USED
          enum:
          - NEW
          - USED
          - DAMAGED
          - DETERIORATED
          - UNRECOVERABLE
          example: USED
          type: string
        shippingAllowed:
          description: "That toggle allows the seller to propose shipping for its\
            \ item. If set in conjunction of shippingCarrier, the label will be automatically\
            \ generated. Also, it will restrict the carrier to the limited subset\
            \ defined."
          type: boolean
        handDeliveryAllowed:
          default: true
          description: Enable both parties to finalize the transaction in person rather
            than using delivery. A QR Code must be scanned by the seller once the
            buyer claims the product.
          example: true
          type: boolean
        shippingCarriers:
          description: "If you wish to enable automated shipping label generation\
            \ through a specific provider, specify it there."
          items:
            enum:
            - SwissPost
            - Colissimo
            - MondialRelay
            type: string
          type: array
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        iri:
          example: https://example.com/
          format: iri-reference
          readOnly: true
          type: string
      required:
      - currencyCode
      - handDeliveryAllowed
      - nature
      - seller
      - shippingAllowed
      - status
      - ulid
    Offer-IndependentWrite:
      deprecated: false
      description: ""
      properties:
        publicUrl:
          description: The public URL for your Ad/Offer on your marketplace.
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
          externalDocs:
            url: https://schema.org/url
          format: uri
          nullable: true
          type: string
        redirectUrl:
          description: Fill-in that field IF you intend to redirect your customer
            instead of using a WebView.
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold?checkout=true
          externalDocs:
            url: https://schema.org/url
          format: uri
          nullable: true
          type: string
        seller:
          $ref: '#/components/schemas/Offer-Persona-IndependentWrite'
        presetBuyer:
          $ref: '#/components/schemas/Offer-Persona-IndependentWrite'
        nature:
          default: physical_item
          description: This WILL affect the assigned workflow. Choosing service will
            disable delivery for example. Refer to our technical hub for more information.
          enum:
          - service
          - physical_item
          - dematerialized_item
          - rent_item
          example: physical_item
          type: string
        title:
          example: ASUS TUF X570-PLUS GAMING Motherboard
          maxLength: 250
          type: string
        description:
          example: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\
            \ eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\
            \ ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\
            \ ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\
            \ velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\
            \ cupidatat non proident, sunt in culpa qui officia deserunt mollit anim\
            \ id est laborum."
          maxLength: 100000
          nullable: true
          type: string
        unitPrice:
          format: float
          type: number
        minNegotiableUnitPrice:
          format: float
          type: number
        allowToNegotiateUnitPrice:
          type: boolean
        currencyCode:
          default: EUR
          example: EUR
          externalDocs:
            url: https://schema.org/priceCurrency
          type: string
        itemCount:
          default: 1
          example: 1
          type: integer
        condition:
          default: USED
          enum:
          - NEW
          - USED
          - DAMAGED
          - DETERIORATED
          - UNRECOVERABLE
          example: USED
          type: string
        weightInGram:
          description: "Accepted values between 500g (0.5kg) and 10,000g (10kg)."
          maximum: 10000
          minimum: 500
          type: integer
        shippingAllowed:
          description: "That toggle allows the seller to propose shipping for its\
            \ item. If set in conjunction of shippingCarrier, the label will be automatically\
            \ generated. Also, it will restrict the carrier to the limited subset\
            \ defined."
          type: boolean
        handDeliveryAllowed:
          default: true
          description: Enable both parties to finalize the transaction in person rather
            than using delivery. A QR Code must be scanned by the seller once the
            buyer claims the product.
          example: true
          type: boolean
        shippingCarriers:
          description: "If you wish to enable automated shipping label generation\
            \ through a specific provider, specify it there."
          items:
            enum:
            - SwissPost
            - Colissimo
            - MondialRelay
            type: string
          type: array
          uniqueItems: true
        eanCode:
          example: "4718017388450"
          nullable: true
          type: string
        canBeSoldSeparately:
          default: true
          description: Set this flag to false to forbid a potential buyer to acquire
            less than "itemCount" item(s)
          example: true
          type: boolean
        metadata:
          items:
            $ref: '#/components/schemas/Offer-Metadata-IndependentWrite'
          type: array
      required:
      - allowToNegotiateUnitPrice
      - seller
    Offer-Media-Read:
      deprecated: false
      description: ""
      example:
        publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
        id: 6
      properties:
        id:
          readOnly: true
          type: integer
        publicUrl:
          example: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          externalDocs:
            url: https://schema.org/url
          format: uri
          type: string
      required:
      - publicUrl
    Offer-Metadata-IndependentWrite:
      deprecated: false
      description: ""
      example:
        value: "54412"
        key: External-ID
      properties:
        key:
          example: External-ID
          type: string
        value:
          example: "54412"
          nullable: true
          type: string
    Offer-Metadata-Update:
      deprecated: false
      description: ""
      example:
        value: "54412"
        key: External-ID
      properties:
        key:
          example: External-ID
          type: string
        value:
          example: "54412"
          nullable: true
          type: string
    Offer-Organization-Read:
      deprecated: false
      description: ""
      example:
        websiteUrl: websiteUrl
        name: name
        icon:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          id: 6
        primaryColor: primaryColor
        logo:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          id: 6
        customBaseUrl: customBaseUrl
      properties:
        name:
          type: string
        websiteUrl:
          nullable: true
          type: string
        customBaseUrl:
          nullable: true
          type: string
        icon:
          $ref: '#/components/schemas/Offer-Media-Read'
        logo:
          $ref: '#/components/schemas/Offer-Media-Read'
        primaryColor:
          nullable: true
          type: string
    Offer-Persona-IndependentWrite:
      deprecated: false
      description: ""
      properties:
        firstName:
          example: John
          maxLength: 64
          minLength: 1
          type: string
        lastName:
          example: Doe
          maxLength: 64
          minLength: 1
          type: string
        gender:
          default: RATHER_NOT_SAY
          enum:
          - MALE
          - FEMALE
          - OTHER
          - RATHER_NOT_SAY
          example: RATHER_NOT_SAY
          type: string
        dateOfBirth: {}
        language:
          description: "That data is used for rendering the frontend application with\
            \ given language. If not set, will be inferred. Custom codes can be issued\
            \ for specific requirements."
          example: fr
          nullable: true
          type: string
        email:
          example: john.doe@gmail.com
          externalDocs:
            url: https://schema.org/email
          format: email
          nullable: true
          type: string
        mobilePhoneNumber:
          example: "+33745214529"
          nullable: true
          type: string
        address:
          $ref: '#/components/schemas/Offer-Address-IndependentWrite'
        metadata:
          description: You can assign different meta to your Persona object for different
            purposes. eg. Ease searching.
          items:
            $ref: '#/components/schemas/Offer-Metadata-IndependentWrite'
          maxItems: 16
          type: array
      required:
      - firstName
      - gender
      - lastName
    Offer-Persona-Read:
      deprecated: false
      description: ""
      example:
        registered: true
      properties:
        registered:
          description: Determine if the Persona have a Tripartie account
          readOnly: true
          type: boolean
    Offer-PostCreationRead:
      deprecated: false
      description: ""
      example:
        sellerId: 58
        ulid: ulid
        presetBuyerId: 42
        url: https://next.tripartie.app/?c=01ARZ3NDEKTSV4RRFFQ69G5FAV
      properties:
        ulid:
          type: string
        url:
          example: https://next.tripartie.app/?c=01ARZ3NDEKTSV4RRFFQ69G5FAV
          nullable: true
          readOnly: true
          type: string
        presetBuyerId:
          example: 42
          nullable: true
          readOnly: true
          type: integer
        sellerId:
          example: 58
          nullable: true
          readOnly: true
          type: integer
    Offer-Read:
      deprecated: false
      description: ""
      example:
        seller:
          registered: true
        redirectUrl: https://marketplace.tld/offers/that-special-item-i-wish-to-sold?checkout=true
        ulid: ulid
        description: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\
          \ do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\
          \ ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\
          \ ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\
          \ velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\
          \ cupidatat non proident, sunt in culpa qui officia deserunt mollit anim\
          \ id est laborum."
        title: ASUS TUF X570-PLUS GAMING Motherboard
        canBeSoldSeparately: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        eanCode: "4718017388450"
        presetBuyer:
          registered: true
        updatedAt: 2000-01-23T04:56:07.000+00:00
        unitPrice: 0.8008282
        iri: https://example.com/
        nature: physical_item
        url: https://next.tripartie.app/?c=01ARZ3NDEKTSV4RRFFQ69G5FAV
        itemCount: 1
        shippingAllowed: true
        handDeliveryAllowed: true
        weightInGram: 6
        medias:
        - publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          id: 6
        - publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          id: 6
        condition: USED
        shippingCarriers:
        - SwissPost
        - SwissPost
        organization:
          websiteUrl: websiteUrl
          name: name
          icon:
            publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
            id: 6
          primaryColor: primaryColor
          logo:
            publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
            id: 6
          customBaseUrl: customBaseUrl
        publicUrl: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
        currencyCode: EUR
        status: issued
      properties:
        ulid:
          type: string
        status:
          enum:
          - issued
          - active
          - fulfilled
          - expired
          type: string
        publicUrl:
          description: The public URL for your Ad/Offer on your marketplace.
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
          nullable: true
          type: string
        redirectUrl:
          description: Fill-in that field IF you intend to redirect your customer
            instead of using a WebView.
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold?checkout=true
          nullable: true
          type: string
        url:
          example: https://next.tripartie.app/?c=01ARZ3NDEKTSV4RRFFQ69G5FAV
          externalDocs:
            url: https://schema.org/url
          format: uri
          nullable: true
          readOnly: true
          type: string
        organization:
          $ref: '#/components/schemas/Offer-Organization-Read'
        seller:
          $ref: '#/components/schemas/Offer-Persona-Read'
        presetBuyer:
          $ref: '#/components/schemas/Offer-Persona-Read'
        nature:
          default: physical_item
          description: This WILL affect the assigned workflow. Choosing service will
            disable delivery for example. Refer to our technical hub for more information.
          enum:
          - service
          - physical_item
          - dematerialized_item
          - rent_item
          example: physical_item
          type: string
        title:
          example: ASUS TUF X570-PLUS GAMING Motherboard
          type: string
        description:
          example: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\
            \ eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\
            \ ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\
            \ ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\
            \ velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\
            \ cupidatat non proident, sunt in culpa qui officia deserunt mollit anim\
            \ id est laborum."
          nullable: true
          type: string
        unitPrice:
          format: float
          type: number
        currencyCode:
          default: EUR
          example: EUR
          type: string
        itemCount:
          default: 1
          example: 1
          type: integer
        condition:
          default: USED
          enum:
          - NEW
          - USED
          - DAMAGED
          - DETERIORATED
          - UNRECOVERABLE
          example: USED
          type: string
        weightInGram:
          description: "Accepted values between 500g (0.5kg) and 10,000g (10kg)."
          type: integer
        shippingAllowed:
          description: "That toggle allows the seller to propose shipping for its\
            \ item. If set in conjunction of shippingCarrier, the label will be automatically\
            \ generated. Also, it will restrict the carrier to the limited subset\
            \ defined."
          type: boolean
        handDeliveryAllowed:
          default: true
          description: Enable both parties to finalize the transaction in person rather
            than using delivery. A QR Code must be scanned by the seller once the
            buyer claims the product.
          example: true
          type: boolean
        shippingCarriers:
          description: "If you wish to enable automated shipping label generation\
            \ through a specific provider, specify it there."
          items:
            enum:
            - SwissPost
            - Colissimo
            - MondialRelay
            type: string
          type: array
        eanCode:
          example: "4718017388450"
          nullable: true
          type: string
        canBeSoldSeparately:
          default: true
          description: Set this flag to false to forbid a potential buyer to acquire
            less than "itemCount" item(s)
          example: true
          type: boolean
        medias:
          items:
            $ref: '#/components/schemas/Offer-Media-Read'
          type: array
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        iri:
          example: https://example.com/
          format: iri-reference
          readOnly: true
          type: string
      required:
      - canBeSoldSeparately
      - currencyCode
      - handDeliveryAllowed
      - medias
      - nature
      - seller
      - shippingAllowed
      - status
      - ulid
      - url
      - weightInGram
    Offer-SoloWrite:
      deprecated: false
      description: ""
      properties:
        captcha:
          nullable: true
          type: string
        nature:
          default: physical_item
          description: This WILL affect the assigned workflow. Choosing service will
            disable delivery for example. Refer to our technical hub for more information.
          enum:
          - service
          - physical_item
          - dematerialized_item
          - rent_item
          example: physical_item
          type: string
        title:
          example: ASUS TUF X570-PLUS GAMING Motherboard
          maxLength: 250
          type: string
        description:
          example: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\
            \ eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\
            \ ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\
            \ ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\
            \ velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\
            \ cupidatat non proident, sunt in culpa qui officia deserunt mollit anim\
            \ id est laborum."
          maxLength: 100000
          nullable: true
          type: string
        unitPrice:
          format: float
          type: number
        minNegotiableUnitPrice:
          format: float
          type: number
        allowToNegotiateUnitPrice:
          type: boolean
        currencyCode:
          default: EUR
          example: EUR
          externalDocs:
            url: https://schema.org/priceCurrency
          type: string
        itemCount:
          default: 1
          example: 1
          type: integer
        condition:
          default: USED
          enum:
          - NEW
          - USED
          - DAMAGED
          - DETERIORATED
          - UNRECOVERABLE
          example: USED
          type: string
        weightInGram:
          description: "Accepted values between 500g (0.5kg) and 10,000g (10kg)."
          maximum: 10000
          minimum: 500
          type: integer
        shippingAllowed:
          description: "That toggle allows the seller to propose shipping for its\
            \ item. If set in conjunction of shippingCarrier, the label will be automatically\
            \ generated. Also, it will restrict the carrier to the limited subset\
            \ defined."
          type: boolean
        handDeliveryAllowed:
          default: true
          description: Enable both parties to finalize the transaction in person rather
            than using delivery. A QR Code must be scanned by the seller once the
            buyer claims the product.
          example: true
          type: boolean
        shippingCarriers:
          description: "If you wish to enable automated shipping label generation\
            \ through a specific provider, specify it there."
          items:
            enum:
            - SwissPost
            - Colissimo
            - MondialRelay
            type: string
          type: array
          uniqueItems: true
        canBeSoldSeparately:
          default: true
          description: Set this flag to false to forbid a potential buyer to acquire
            less than "itemCount" item(s)
          example: true
          type: boolean
      required:
      - allowToNegotiateUnitPrice
      - captcha
    Offer-Update:
      deprecated: false
      description: ""
      properties:
        publicUrl:
          description: The public URL for your Ad/Offer on your marketplace.
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
          nullable: true
          type: string
        redirectUrl:
          description: Fill-in that field IF you intend to redirect your customer
            instead of using a WebView.
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold?checkout=true
          nullable: true
          type: string
        title:
          example: ASUS TUF X570-PLUS GAMING Motherboard
          type: string
        description:
          example: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\
            \ eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\
            \ ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\
            \ ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\
            \ velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\
            \ cupidatat non proident, sunt in culpa qui officia deserunt mollit anim\
            \ id est laborum."
          nullable: true
          type: string
        unitPrice:
          format: float
          type: number
        minNegotiableUnitPrice:
          format: float
          type: number
        allowToNegotiateUnitPrice:
          type: boolean
        currencyCode:
          default: EUR
          example: EUR
          type: string
        shippingAllowed:
          description: "That toggle allows the seller to propose shipping for its\
            \ item. If set in conjunction of shippingCarrier, the label will be automatically\
            \ generated. Also, it will restrict the carrier to the limited subset\
            \ defined."
          type: boolean
        handDeliveryAllowed:
          default: true
          description: Enable both parties to finalize the transaction in person rather
            than using delivery. A QR Code must be scanned by the seller once the
            buyer claims the product.
          example: true
          type: boolean
        shippingCarriers:
          description: "If you wish to enable automated shipping label generation\
            \ through a specific provider, specify it there."
          items:
            enum:
            - SwissPost
            - Colissimo
            - MondialRelay
            type: string
          type: array
          uniqueItems: true
        eanCode:
          example: "4718017388450"
          nullable: true
          type: string
        canBeSoldSeparately:
          default: true
          description: Set this flag to false to forbid a potential buyer to acquire
            less than "itemCount" item(s)
          example: true
          type: boolean
        metadata:
          items:
            $ref: '#/components/schemas/Offer-Metadata-Update'
          type: array
    Organization-Address-Update:
      deprecated: false
      description: ""
      properties:
        companyName:
          example: Company Tld
          nullable: true
          type: string
        countryCode:
          example: FRA
          maxLength: 3
          type: string
        zipCode:
          example: "75004"
          type: string
        cityName:
          example: Paris
          type: string
        firstLine:
          example: 118 avenue des champs élysées
          type: string
        secondLine:
          example: Apt 6E
          nullable: true
          type: string
        buildingName:
          example: Electron
          nullable: true
          type: string
        buildingFloor:
          example: Third floor
          nullable: true
          type: string
        gateOrPortalOrInboxCode:
          example: "3124"
          nullable: true
          type: string
    Organization-CollectionRead:
      deprecated: false
      description: ""
      example:
        websiteUrl: websiteUrl
        name: name
        icon:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          id: 6
        logo:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          id: 6
        id: 0
        commercialRegistryNumber: commercialRegistryNumber
        vatNumber: vatNumber
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
        vatNumber:
          nullable: true
          type: string
        commercialRegistryNumber:
          type: string
        websiteUrl:
          nullable: true
          type: string
        icon:
          $ref: '#/components/schemas/Organization-Media-CollectionRead'
        logo:
          $ref: '#/components/schemas/Organization-Media-CollectionRead'
    Organization-Media-CollectionRead:
      deprecated: false
      description: ""
      example:
        publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
        id: 6
      properties:
        id:
          readOnly: true
          type: integer
        publicUrl:
          example: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          externalDocs:
            url: https://schema.org/url
          format: uri
          type: string
      required:
      - publicUrl
    Organization-Media-Read:
      deprecated: false
      description: ""
      example:
        publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
        id: 6
      properties:
        id:
          readOnly: true
          type: integer
        publicUrl:
          example: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          externalDocs:
            url: https://schema.org/url
          format: uri
          type: string
      required:
      - publicUrl
    Organization-Read:
      deprecated: false
      description: ""
      example:
        domainVerified: true
        websiteUrl: websiteUrl
        name: name
        icon:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          id: 6
        primaryColor: primaryColor
        logo:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          id: 6
        commercialRegistryNumber: commercialRegistryNumber
        customBaseUrl: customBaseUrl
        vatNumber: vatNumber
      properties:
        name:
          type: string
        vatNumber:
          nullable: true
          type: string
        commercialRegistryNumber:
          type: string
        websiteUrl:
          nullable: true
          type: string
        customBaseUrl:
          nullable: true
          type: string
        domainVerified:
          type: boolean
        icon:
          $ref: '#/components/schemas/Organization-Media-Read'
        logo:
          $ref: '#/components/schemas/Organization-Media-Read'
        primaryColor:
          nullable: true
          type: string
      required:
      - domainVerified
    Organization-Update:
      deprecated: false
      description: ""
      properties:
        name:
          maxLength: 64
          type: string
        vatNumber:
          maxLength: 32
          nullable: true
          type: string
        commercialRegistryNumber:
          maxLength: 32
          type: string
        websiteUrl:
          externalDocs:
            url: https://schema.org/url
          format: uri
          maxLength: 64
          nullable: true
          type: string
        customBaseUrl:
          externalDocs:
            url: https://schema.org/url
          format: uri
          nullable: true
          type: string
        billingAddress:
          $ref: '#/components/schemas/Organization-Address-Update'
        primaryColor:
          nullable: true
          type: string
      required:
      - name
    Organization-UserRead:
      deprecated: false
      description: ""
      example:
        domainVerified: true
        name: name
        icon:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          id: 6
        logo:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          id: 6
        id: 6
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
        domainVerified:
          type: boolean
        icon:
          $ref: '#/components/schemas/Media-UserRead'
        logo:
          $ref: '#/components/schemas/Media-UserRead'
      required:
      - domainVerified
    Persona:
      deprecated: false
      description: ""
      properties:
        id:
          readOnly: true
          type: integer
        organization:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        firstName:
          example: John
          type: string
        lastName:
          example: Doe
          type: string
        gender:
          default: RATHER_NOT_SAY
          enum:
          - MALE
          - FEMALE
          - OTHER
          - RATHER_NOT_SAY
          example: RATHER_NOT_SAY
          type: string
        dateOfBirth: {}
        language:
          description: "That data is used for rendering the frontend application with\
            \ given language. If not set, will be inferred. Custom codes can be issued\
            \ for specific requirements."
          example: fr
          nullable: true
          type: string
        email:
          example: john.doe@gmail.com
          nullable: true
          type: string
        mobilePhoneNumber:
          example: "+33745214529"
          nullable: true
          type: string
        address:
          $ref: '#/components/schemas/Address'
        metadata:
          description: You can assign different meta to your Persona object for different
            purposes. eg. Ease searching.
          items:
            $ref: '#/components/schemas/Metadata'
          type: array
        offers:
          items:
            example: https://example.com/
            format: iri-reference
            type: string
          type: array
        purchases:
          items:
            example: https://example.com/
            format: iri-reference
            type: string
          type: array
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        ownedBy:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        offerCount:
          description: Issued Offers count owned by a given Persona
          example: 4
          readOnly: true
          type: integer
        purchaseCount:
          example: 42
          readOnly: true
          type: integer
        registered:
          description: Determine if the Persona have a Tripartie account
          readOnly: true
          type: boolean
      required:
      - offers
      - purchases
    Persona-Address-Read:
      deprecated: false
      description: ""
      example:
        zipCode: "75004"
        buildingName: Electron
        createdAt: 2000-01-23T04:56:07.000+00:00
        cityName: Paris
        countryCode: FRA
        secondLine: Apt 6E
        firstLine: 118 avenue des champs élysées
        buildingFloor: Third floor
        gateOrPortalOrInboxCode: "3124"
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        countryCode:
          example: FRA
          maxLength: 3
          type: string
        zipCode:
          example: "75004"
          type: string
        cityName:
          example: Paris
          type: string
        firstLine:
          example: 118 avenue des champs élysées
          type: string
        secondLine:
          example: Apt 6E
          nullable: true
          type: string
        buildingName:
          example: Electron
          nullable: true
          type: string
        buildingFloor:
          example: Third floor
          nullable: true
          type: string
        gateOrPortalOrInboxCode:
          example: "3124"
          nullable: true
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
    Persona-Address-Update:
      deprecated: false
      description: ""
      properties:
        countryCode:
          example: FRA
          maxLength: 3
          type: string
        zipCode:
          example: "75004"
          type: string
        cityName:
          example: Paris
          type: string
        firstLine:
          example: 118 avenue des champs élysées
          type: string
        secondLine:
          example: Apt 6E
          nullable: true
          type: string
        buildingName:
          example: Electron
          nullable: true
          type: string
        buildingFloor:
          example: Third floor
          nullable: true
          type: string
        gateOrPortalOrInboxCode:
          example: "3124"
          nullable: true
          type: string
    Persona-Address-Write:
      deprecated: false
      description: ""
      properties:
        countryCode:
          example: FRA
          maxLength: 3
          type: string
        zipCode:
          example: "75004"
          type: string
        cityName:
          example: Paris
          type: string
        firstLine:
          example: 118 avenue des champs élysées
          type: string
        secondLine:
          example: Apt 6E
          nullable: true
          type: string
        buildingName:
          example: Electron
          nullable: true
          type: string
        buildingFloor:
          example: Third floor
          nullable: true
          type: string
        gateOrPortalOrInboxCode:
          example: "3124"
          nullable: true
          type: string
    Persona-CollectionRead:
      deprecated: false
      description: ""
      example:
        firstName: John
        lastName: Doe
        createdAt: 2000-01-23T04:56:07.000+00:00
        offerCount: 4
        purchaseCount: 42
        id: 0
        email: john.doe@gmail.com
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          readOnly: true
          type: integer
        firstName:
          example: John
          type: string
        lastName:
          example: Doe
          type: string
        email:
          example: john.doe@gmail.com
          nullable: true
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        offerCount:
          description: Issued Offers count owned by a given Persona
          example: 4
          readOnly: true
          type: integer
        purchaseCount:
          example: 42
          readOnly: true
          type: integer
    Persona-Metadata-Read:
      deprecated: false
      description: ""
      example:
        value: "54412"
        key: External-ID
      properties:
        key:
          example: External-ID
          type: string
        value:
          example: "54412"
          nullable: true
          type: string
    Persona-Metadata-Update:
      deprecated: false
      description: ""
      example:
        value: "54412"
        key: External-ID
      properties:
        key:
          example: External-ID
          type: string
        value:
          example: "54412"
          nullable: true
          type: string
    Persona-Metadata-Write:
      deprecated: false
      description: ""
      example:
        value: "54412"
        key: External-ID
      properties:
        key:
          example: External-ID
          type: string
        value:
          example: "54412"
          nullable: true
          type: string
    Persona-Read:
      deprecated: false
      description: ""
      example:
        lastName: Doe
        mobilePhoneNumber: "+33745214529"
        metadata:
        - value: "54412"
          key: External-ID
        - value: "54412"
          key: External-ID
        address:
          zipCode: "75004"
          buildingName: Electron
          createdAt: 2000-01-23T04:56:07.000+00:00
          cityName: Paris
          countryCode: FRA
          secondLine: Apt 6E
          firstLine: 118 avenue des champs élysées
          buildingFloor: Third floor
          gateOrPortalOrInboxCode: "3124"
          updatedAt: 2000-01-23T04:56:07.000+00:00
        gender: RATHER_NOT_SAY
        offerCount: 4
        purchaseCount: 42
        registered: true
        dateOfBirth: ""
        language: fr
        firstName: John
        createdAt: 2000-01-23T04:56:07.000+00:00
        id: 0
        email: john.doe@gmail.com
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          readOnly: true
          type: integer
        firstName:
          example: John
          type: string
        lastName:
          example: Doe
          type: string
        gender:
          default: RATHER_NOT_SAY
          enum:
          - MALE
          - FEMALE
          - OTHER
          - RATHER_NOT_SAY
          example: RATHER_NOT_SAY
          type: string
        dateOfBirth: {}
        language:
          description: "That data is used for rendering the frontend application with\
            \ given language. If not set, will be inferred. Custom codes can be issued\
            \ for specific requirements."
          example: fr
          nullable: true
          type: string
        email:
          example: john.doe@gmail.com
          nullable: true
          type: string
        mobilePhoneNumber:
          example: "+33745214529"
          nullable: true
          type: string
        address:
          $ref: '#/components/schemas/Persona-Address-Read'
        metadata:
          description: You can assign different meta to your Persona object for different
            purposes. eg. Ease searching.
          items:
            $ref: '#/components/schemas/Persona-Metadata-Read'
          type: array
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        offerCount:
          description: Issued Offers count owned by a given Persona
          example: 4
          readOnly: true
          type: integer
        purchaseCount:
          example: 42
          readOnly: true
          type: integer
        registered:
          description: Determine if the Persona have a Tripartie account
          readOnly: true
          type: boolean
    Persona-Update:
      deprecated: false
      description: ""
      properties:
        firstName:
          example: John
          maxLength: 64
          minLength: 1
          type: string
        lastName:
          example: Doe
          maxLength: 64
          minLength: 1
          type: string
        gender:
          default: RATHER_NOT_SAY
          enum:
          - MALE
          - FEMALE
          - OTHER
          - RATHER_NOT_SAY
          example: RATHER_NOT_SAY
          type: string
        dateOfBirth: {}
        language:
          description: "That data is used for rendering the frontend application with\
            \ given language. If not set, will be inferred. Custom codes can be issued\
            \ for specific requirements."
          example: fr
          nullable: true
          type: string
        email:
          example: john.doe@gmail.com
          externalDocs:
            url: https://schema.org/email
          format: email
          nullable: true
          type: string
        mobilePhoneNumber:
          example: "+33745214529"
          nullable: true
          type: string
        address:
          $ref: '#/components/schemas/Persona-Address-Update'
        metadata:
          description: You can assign different meta to your Persona object for different
            purposes. eg. Ease searching.
          items:
            $ref: '#/components/schemas/Persona-Metadata-Update'
          maxItems: 16
          type: array
      required:
      - firstName
      - gender
      - lastName
    Persona-UserRead:
      deprecated: false
      description: ""
      example:
        organization:
          domainVerified: true
          name: name
          icon:
            publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
            id: 6
          logo:
            publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
            id: 6
          id: 6
      properties:
        organization:
          $ref: '#/components/schemas/Organization-UserRead'
    Persona-Write:
      deprecated: false
      description: ""
      properties:
        firstName:
          example: John
          maxLength: 64
          minLength: 1
          type: string
        lastName:
          example: Doe
          maxLength: 64
          minLength: 1
          type: string
        gender:
          default: RATHER_NOT_SAY
          enum:
          - MALE
          - FEMALE
          - OTHER
          - RATHER_NOT_SAY
          example: RATHER_NOT_SAY
          type: string
        dateOfBirth: {}
        language:
          description: "That data is used for rendering the frontend application with\
            \ given language. If not set, will be inferred. Custom codes can be issued\
            \ for specific requirements."
          example: fr
          nullable: true
          type: string
        email:
          example: john.doe@gmail.com
          externalDocs:
            url: https://schema.org/email
          format: email
          nullable: true
          type: string
        mobilePhoneNumber:
          example: "+33745214529"
          nullable: true
          type: string
        address:
          $ref: '#/components/schemas/Persona-Address-Write'
        metadata:
          description: You can assign different meta to your Persona object for different
            purposes. eg. Ease searching.
          items:
            $ref: '#/components/schemas/Persona-Metadata-Write'
          maxItems: 16
          type: array
      required:
      - firstName
      - gender
      - lastName
    ProofOfIdentity-CollectionRead:
      deprecated: false
      description: ""
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        extension: extension
        processorStatus: unallocated
        providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
        providerCreatedAt: 2000-01-23T04:56:07.000+00:00
        type: national_id
        originalFilename: originalFilename
        providerName: providerName
        status: drafted
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        status:
          enum:
          - drafted
          - uploaded
          - submitted
          - accepted
          - refused
          - blocked
          type: string
        type:
          enum:
          - national_id
          - passport
          type: string
        originalFilename:
          nullable: true
          type: string
        extension:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        providerName:
          nullable: true
          type: string
        providerCreatedAt:
          format: date-time
          nullable: true
          type: string
        providerUpdatedAt:
          format: date-time
          nullable: true
          type: string
        processorStatus:
          description: Automagically infer on what state the entity is at the Payment
            Processor.
          enum:
          - unallocated
          - allocating
          - allocated
          - freed
          - outdated
          readOnly: true
          type: string
      required:
      - createdAt
      - extension
      - status
      - type
      - updatedAt
    ProofOfIdentity-Read:
      deprecated: false
      description: ""
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        extension: extension
        processorStatus: unallocated
        providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
        providerCreatedAt: 2000-01-23T04:56:07.000+00:00
        type: national_id
        originalFilename: originalFilename
        providerName: providerName
        status: drafted
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        status:
          enum:
          - drafted
          - uploaded
          - submitted
          - accepted
          - refused
          - blocked
          type: string
        type:
          enum:
          - national_id
          - passport
          type: string
        originalFilename:
          nullable: true
          type: string
        extension:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        providerName:
          nullable: true
          type: string
        providerCreatedAt:
          format: date-time
          nullable: true
          type: string
        providerUpdatedAt:
          format: date-time
          nullable: true
          type: string
        processorStatus:
          description: Automagically infer on what state the entity is at the Payment
            Processor.
          enum:
          - unallocated
          - allocating
          - allocated
          - freed
          - outdated
          readOnly: true
          type: string
      required:
      - createdAt
      - extension
      - status
      - type
      - updatedAt
    ProofOfIdentity-Write:
      deprecated: false
      description: ""
      properties:
        type:
          enum:
          - national_id
          - passport
          type: string
      required:
      - type
    Quote-Address-Read:
      deprecated: false
      description: ""
      example:
        zipCode: "75004"
        buildingName: Electron
        createdAt: 2000-01-23T04:56:07.000+00:00
        cityName: Paris
        countryCode: FRA
        secondLine: Apt 6E
        firstLine: 118 avenue des champs élysées
        buildingFloor: Third floor
        gateOrPortalOrInboxCode: "3124"
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        countryCode:
          example: FRA
          maxLength: 3
          type: string
        zipCode:
          example: "75004"
          type: string
        cityName:
          example: Paris
          type: string
        firstLine:
          example: 118 avenue des champs élysées
          type: string
        secondLine:
          example: Apt 6E
          nullable: true
          type: string
        buildingName:
          example: Electron
          nullable: true
          type: string
        buildingFloor:
          example: Third floor
          nullable: true
          type: string
        gateOrPortalOrInboxCode:
          example: "3124"
          nullable: true
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
    Quote-Address-Update:
      deprecated: false
      description: ""
      properties:
        countryCode:
          example: FRA
          maxLength: 3
          type: string
        zipCode:
          example: "75004"
          type: string
        cityName:
          example: Paris
          type: string
        firstLine:
          example: 118 avenue des champs élysées
          type: string
        secondLine:
          example: Apt 6E
          nullable: true
          type: string
        buildingName:
          example: Electron
          nullable: true
          type: string
        buildingFloor:
          example: Third floor
          nullable: true
          type: string
        gateOrPortalOrInboxCode:
          example: "3124"
          nullable: true
          type: string
    Quote-Address-Write:
      deprecated: false
      description: ""
      properties:
        countryCode:
          example: FRA
          maxLength: 3
          type: string
        zipCode:
          example: "75004"
          type: string
        cityName:
          example: Paris
          type: string
        firstLine:
          example: 118 avenue des champs élysées
          type: string
        secondLine:
          example: Apt 6E
          nullable: true
          type: string
        buildingName:
          example: Electron
          nullable: true
          type: string
        buildingFloor:
          example: Third floor
          nullable: true
          type: string
        gateOrPortalOrInboxCode:
          example: "3124"
          nullable: true
          type: string
    Quote-Read:
      deprecated: false
      description: |-
        Someone has to ask for a Quote prior to create
        a transaction and (therefor) charging a known amount
        of money.
      example:
        unitPrice: 2.3021358869347655
        sellerTotal: 3.616076749251911
        iri: https://example.com/
        shippingFees: 5.637377
        ulid: ulid
        thirdPartyRecipientAddress:
          zipCode: "75004"
          buildingName: Electron
          createdAt: 2000-01-23T04:56:07.000+00:00
          cityName: Paris
          countryCode: FRA
          secondLine: Apt 6E
          firstLine: 118 avenue des champs élysées
          buildingFloor: Third floor
          gateOrPortalOrInboxCode: "3124"
          updatedAt: 2000-01-23T04:56:07.000+00:00
        thirdPartyRecipientLastName: thirdPartyRecipientLastName
        attemptUnitPrice: 0.8008282
        transactionFees: 5.962134
        expireAt: 2000-01-23T04:56:07.000+00:00
        originalUnitPrice: 6.0274563
        createdAt: 2000-01-23T04:56:07.000+00:00
        quantityToBeAcquired: 1
        buyerTotal: 9.301444243932576
        exchangeRate: 0.4455
        price: 7.061401241503109
        shippingCarrier: SwissPost
        thirdPartyRecipientFirstName: thirdPartyRecipientFirstName
        pickupCode: pickupCode
        currency: EUR
        originalUnitPriceUnconverted: 1.4658129
      properties:
        ulid:
          type: string
        shippingCarrier:
          enum:
          - SwissPost
          - Colissimo
          - MondialRelay
          - null
          nullable: true
          type: string
        pickupCode:
          nullable: true
          type: string
        quantityToBeAcquired:
          default: 1
          example: 1
          type: integer
        attemptUnitPrice:
          format: float
          type: number
        currency:
          default: EUR
          description: Expect 'EUR' only for now.
          example: EUR
          nullable: true
          type: string
        originalUnitPrice:
          format: float
          type: number
        originalUnitPriceUnconverted:
          format: float
          type: number
        transactionFees:
          format: float
          type: number
        shippingFees:
          format: float
          type: number
        thirdPartyRecipientFirstName:
          maxLength: 32
          minLength: 1
          nullable: true
          type: string
        thirdPartyRecipientLastName:
          maxLength: 32
          minLength: 1
          nullable: true
          type: string
        thirdPartyRecipientAddress:
          $ref: '#/components/schemas/Quote-Address-Read'
        createdAt:
          format: date-time
          type: string
        expireAt:
          format: date-time
          type: string
        iri:
          example: https://example.com/
          format: iri-reference
          readOnly: true
          type: string
        unitPrice:
          nullable: true
          readOnly: true
          type: number
        price:
          nullable: true
          readOnly: true
          type: number
        buyerTotal:
          description: |-
            The buyer pays for:
             - A) item
             - B) shipping (optional)
             - C) fees     (optional)
            This method sum them automatically.
          nullable: true
          readOnly: true
          type: number
        sellerTotal:
          description: Represent what amount is to be expected released to the seller.
          nullable: true
          readOnly: true
          type: number
        exchangeRate:
          description: "Exchange rate, if applicable. Between the offer currency and\
            \ actual charged currency."
          example: 0.4455
          nullable: true
          readOnly: true
          type: number
    Quote-Update:
      deprecated: false
      description: |-
        Someone has to ask for a Quote prior to create
        a transaction and (therefor) charging a known amount
        of money.
      properties:
        shippingCarrier:
          enum:
          - SwissPost
          - Colissimo
          - MondialRelay
          - null
          nullable: true
          type: string
        pickupCode:
          nullable: true
          type: string
        quantityToBeAcquired:
          default: 1
          example: 1
          type: integer
        attemptUnitPrice:
          format: float
          type: number
        thirdPartyRecipientFirstName:
          maxLength: 32
          minLength: 1
          nullable: true
          type: string
        thirdPartyRecipientLastName:
          maxLength: 32
          minLength: 1
          nullable: true
          type: string
        thirdPartyRecipientAddress:
          $ref: '#/components/schemas/Quote-Address-Update'
    Quote-Write:
      deprecated: false
      description: |-
        Someone has to ask for a Quote prior to create
        a transaction and (therefor) charging a known amount
        of money.
      properties:
        captcha:
          nullable: true
          type: string
        offer:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        shippingCarrier:
          enum:
          - SwissPost
          - Colissimo
          - MondialRelay
          - null
          nullable: true
          type: string
        pickupCode:
          nullable: true
          type: string
        quantityToBeAcquired:
          default: 1
          example: 1
          type: integer
        attemptUnitPrice:
          format: float
          type: number
        thirdPartyRecipientFirstName:
          maxLength: 32
          minLength: 1
          nullable: true
          type: string
        thirdPartyRecipientLastName:
          maxLength: 32
          minLength: 1
          nullable: true
          type: string
        thirdPartyRecipientAddress:
          $ref: '#/components/schemas/Quote-Address-Write'
      required:
      - captcha
    Transaction-Address-CollectionRead:
      deprecated: false
      description: ""
      type: object
    Transaction-Address-Read:
      deprecated: false
      description: ""
      type: object
    Transaction-Card-Read:
      deprecated: false
      description: ""
      example:
        processorStatus: unallocated
        providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
        providerCreatedAt: 2000-01-23T04:56:07.000+00:00
        providerName: providerName
      properties:
        providerName:
          nullable: true
          type: string
        providerCreatedAt:
          format: date-time
          nullable: true
          type: string
        providerUpdatedAt:
          format: date-time
          nullable: true
          type: string
        processorStatus:
          description: Automagically infer on what state the entity is at the Payment
            Processor.
          enum:
          - unallocated
          - allocating
          - allocated
          - freed
          - outdated
          readOnly: true
          type: string
    Transaction-CollectionRead:
      deprecated: false
      description: ""
      example:
        totalFees: 7.457744773683766
        fees: 1.2315135367772556
        ulid: ulid
        providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
        awaitedParty: BUYER
        totalCharged: 6.84685269835264
        statusExpiration: 2000-01-23T04:56:07.000+00:00
        buyer:
          firstName: John
          lastName: Doe
          id: 0
        offer:
          seller:
            firstName: John
            lastName: Doe
            id: 0
          unitPrice: 6.0274563
          ulid: ulid
          nature: physical_item
          title: ASUS TUF X570-PLUS GAMING Motherboard
          itemCount: 1
          medias:
          - https://example.com/
          - https://example.com/
          createdAt: 2000-01-23T04:56:07.000+00:00
          condition: USED
          allowToNegotiateUnitPrice: true
          publicUrl: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
          minNegotiableUnitPrice: 1.4658129
          currencyCode: EUR
          presetBuyer:
            firstName: John
            lastName: Doe
            id: 0
          status: issued
          updatedAt: 2000-01-23T04:56:07.000+00:00
        buyerMessage: buyerMessage
        total: 1.4894159098541704
        processorStatus: unallocated
        quote:
          unitPrice: 3.616076749251911
          sellerTotal: 7.386281948385884
          iri: https://example.com/
          shippingFees: 9.301444
          ulid: ulid
          thirdPartyRecipientAddress: "{}"
          thirdPartyRecipientLastName: thirdPartyRecipientLastName
          attemptUnitPrice: 5.962134
          transactionFees: 7.0614014
          expireAt: 2000-01-23T04:56:07.000+00:00
          originalUnitPrice: 5.637377
          createdAt: 2000-01-23T04:56:07.000+00:00
          quantityToBeAcquired: 1
          buyerTotal: 4.145608029883936
          price: 2.027123023002322
          shippingCarrier: SwissPost
          thirdPartyRecipientFirstName: thirdPartyRecipientFirstName
          pickupCode: pickupCode
          currency: EUR
          originalUnitPriceUnconverted: 2.302136
        supplementalFees: 1.0246457001441578
        providerCreatedAt: 2000-01-23T04:56:07.000+00:00
        providerName: providerName
        status: CREATED
      properties:
        ulid:
          type: string
        offer:
          $ref: '#/components/schemas/Transaction-Offer-CollectionRead'
        quote:
          $ref: '#/components/schemas/Transaction-Quote-CollectionRead'
        buyerMessage:
          description: Attach a note. Only the buyer can exercise this right. At the
            creation.
          nullable: true
          type: string
        buyer:
          $ref: '#/components/schemas/Transaction-Persona-CollectionRead'
        status:
          enum:
          - CREATED
          - AUTHORIZED
          - REFUSED
          - ACCEPTED
          - SHIPPED
          - IN_TRANSIT
          - BLOCKED
          - DELIVERED
          - COMPLETED
          - DISPUTED
          - CANCELLED
          - null
          nullable: true
          type: string
        fees:
          nullable: true
          type: number
        supplementalFees:
          nullable: true
          type: number
        providerName:
          nullable: true
          type: string
        providerCreatedAt:
          format: date-time
          nullable: true
          type: string
        providerUpdatedAt:
          format: date-time
          nullable: true
          type: string
        total:
          readOnly: true
          type: number
        totalCharged:
          readOnly: true
          type: number
        totalFees:
          readOnly: true
          type: number
        awaitedParty:
          description: Determine who is awaited (actor) for the next transition
          enum:
          - BUYER
          - PLATFORM
          - SELLER
          readOnly: true
          type: string
          nullable: true
        statusExpiration:
          description: Yield if eligible the date-time at which the transaction state
            expire.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        processorStatus:
          description: Automagically infer on what state the entity is at the Payment
            Processor.
          enum:
          - unallocated
          - allocating
          - allocated
          - freed
          - outdated
          readOnly: true
          type: string
      required:
      - buyer
      - offer
      - quote
      - ulid
    Transaction-Metadata-Read:
      deprecated: false
      description: ""
      example:
        value: "54412"
        key: External-ID
      properties:
        key:
          example: External-ID
          type: string
        value:
          example: "54412"
          nullable: true
          type: string
    Transaction-Offer-CollectionRead:
      deprecated: false
      description: ""
      example:
        seller:
          firstName: John
          lastName: Doe
          id: 0
        unitPrice: 6.0274563
        ulid: ulid
        nature: physical_item
        title: ASUS TUF X570-PLUS GAMING Motherboard
        itemCount: 1
        medias:
        - https://example.com/
        - https://example.com/
        createdAt: 2000-01-23T04:56:07.000+00:00
        condition: USED
        allowToNegotiateUnitPrice: true
        publicUrl: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
        minNegotiableUnitPrice: 1.4658129
        currencyCode: EUR
        presetBuyer:
          firstName: John
          lastName: Doe
          id: 0
        status: issued
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        ulid:
          type: string
        status:
          enum:
          - issued
          - active
          - fulfilled
          - expired
          type: string
        publicUrl:
          description: The public URL for your Ad/Offer on your marketplace.
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
          nullable: true
          type: string
        seller:
          $ref: '#/components/schemas/Transaction-Persona-CollectionRead'
        presetBuyer:
          $ref: '#/components/schemas/Transaction-Persona-CollectionRead'
        nature:
          default: physical_item
          description: This WILL affect the assigned workflow. Choosing service will
            disable delivery for example. Refer to our technical hub for more information.
          enum:
          - service
          - physical_item
          - dematerialized_item
          - rent_item
          example: physical_item
          type: string
        title:
          example: ASUS TUF X570-PLUS GAMING Motherboard
          type: string
        unitPrice:
          format: float
          type: number
        minNegotiableUnitPrice:
          format: float
          type: number
        allowToNegotiateUnitPrice:
          type: boolean
        currencyCode:
          default: EUR
          example: EUR
          type: string
        itemCount:
          default: 1
          example: 1
          type: integer
        condition:
          default: USED
          enum:
          - NEW
          - USED
          - DAMAGED
          - DETERIORATED
          - UNRECOVERABLE
          example: USED
          type: string
        medias:
          items:
            example: https://example.com/
            format: iri-reference
            type: string
          type: array
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
      required:
      - currencyCode
      - medias
      - nature
      - seller
      - status
      - ulid
    Transaction-Offer-Read:
      deprecated: false
      description: ""
      example:
        seller:
          firstName: John
          lastName: Doe
          mobilePhoneNumber: "+33745214529"
          address: "{}"
          registered: true
          language: fr
          id: 0
          email: john.doe@gmail.com
        unitPrice: 6.0274563
        metadata:
        - value: "54412"
          key: External-ID
        - value: "54412"
          key: External-ID
        redirectUrl: https://marketplace.tld/offers/that-special-item-i-wish-to-sold?checkout=true
        ulid: ulid
        nature: physical_item
        description: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\
          \ do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\
          \ ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\
          \ ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\
          \ velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\
          \ cupidatat non proident, sunt in culpa qui officia deserunt mollit anim\
          \ id est laborum."
        title: ASUS TUF X570-PLUS GAMING Motherboard
        itemCount: 1
        shippingAllowed: true
        canBeSoldSeparately: true
        handDeliveryAllowed: true
        weightInGram: 1
        medias:
        - https://example.com/
        - https://example.com/
        createdAt: 2000-01-23T04:56:07.000+00:00
        condition: USED
        shippingCarriers:
        - SwissPost
        - SwissPost
        eanCode: "4718017388450"
        publicUrl: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
        currencyCode: EUR
        presetBuyer:
          firstName: John
          lastName: Doe
          mobilePhoneNumber: "+33745214529"
          address: "{}"
          registered: true
          language: fr
          id: 0
          email: john.doe@gmail.com
        status: issued
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        ulid:
          type: string
        status:
          enum:
          - issued
          - active
          - fulfilled
          - expired
          type: string
        publicUrl:
          description: The public URL for your Ad/Offer on your marketplace.
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
          nullable: true
          type: string
        redirectUrl:
          description: Fill-in that field IF you intend to redirect your customer
            instead of using a WebView.
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold?checkout=true
          nullable: true
          type: string
        seller:
          $ref: '#/components/schemas/Transaction-Persona-Read'
        presetBuyer:
          $ref: '#/components/schemas/Transaction-Persona-Read'
        nature:
          default: physical_item
          description: This WILL affect the assigned workflow. Choosing service will
            disable delivery for example. Refer to our technical hub for more information.
          enum:
          - service
          - physical_item
          - dematerialized_item
          - rent_item
          example: physical_item
          type: string
        title:
          example: ASUS TUF X570-PLUS GAMING Motherboard
          type: string
        description:
          example: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\
            \ eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\
            \ ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\
            \ ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\
            \ velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\
            \ cupidatat non proident, sunt in culpa qui officia deserunt mollit anim\
            \ id est laborum."
          nullable: true
          type: string
        unitPrice:
          format: float
          type: number
        currencyCode:
          default: EUR
          example: EUR
          type: string
        itemCount:
          default: 1
          example: 1
          type: integer
        condition:
          default: USED
          enum:
          - NEW
          - USED
          - DAMAGED
          - DETERIORATED
          - UNRECOVERABLE
          example: USED
          type: string
        weightInGram:
          description: "Accepted values between 500g (0.5kg) and 10,000g (10kg)."
          type: integer
        shippingAllowed:
          description: "That toggle allows the seller to propose shipping for its\
            \ item. If set in conjunction of shippingCarrier, the label will be automatically\
            \ generated. Also, it will restrict the carrier to the limited subset\
            \ defined."
          type: boolean
        handDeliveryAllowed:
          default: true
          description: Enable both parties to finalize the transaction in person rather
            than using delivery. A QR Code must be scanned by the seller once the
            buyer claims the product.
          example: true
          type: boolean
        shippingCarriers:
          description: "If you wish to enable automated shipping label generation\
            \ through a specific provider, specify it there."
          items:
            enum:
            - SwissPost
            - Colissimo
            - MondialRelay
            type: string
          type: array
        eanCode:
          example: "4718017388450"
          nullable: true
          type: string
        canBeSoldSeparately:
          default: true
          description: Set this flag to false to forbid a potential buyer to acquire
            less than "itemCount" item(s)
          example: true
          type: boolean
        metadata:
          items:
            $ref: '#/components/schemas/Transaction-Metadata-Read'
          type: array
        medias:
          items:
            example: https://example.com/
            format: iri-reference
            type: string
          type: array
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
      required:
      - canBeSoldSeparately
      - currencyCode
      - handDeliveryAllowed
      - medias
      - nature
      - seller
      - shippingAllowed
      - status
      - ulid
      - weightInGram
    Transaction-Parcel-Read:
      deprecated: false
      description: ""
      example:
        identifier: 8J001271466474
        createdAt: 2000-01-23T04:56:07.000+00:00
        carrier: SwissPost
        historicalSenderAddress: historicalSenderAddress
        historicalRecipientAddress: historicalRecipientAddress
        price: 4.88
        trackingPublicUrl: trackingPublicUrl
        currency: EUR
        labelPublicUrl: labelPublicUrl
        status: CREATED
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        carrier:
          enum:
          - SwissPost
          - Colissimo
          - MondialRelay
          type: string
        identifier:
          example: 8J001271466474
          maxLength: 128
          minLength: 4
          type: string
        price:
          example: 4.88
          minimum: 0
          nullable: true
          type: number
        currency:
          default: EUR
          example: EUR
          externalDocs:
            url: https://schema.org/priceCurrency
          nullable: true
          type: string
        status:
          enum:
          - CREATED
          - SHIPPED
          - IN_TRANSIT
          - DELIVERED
          - ERROR
          - ACCEPTED
          - REFUSED
          - null
          nullable: true
          type: string
        labelPublicUrl:
          nullable: true
          type: string
        trackingPublicUrl:
          nullable: true
          type: string
        historicalRecipientAddress:
          nullable: true
          type: string
        historicalSenderAddress:
          nullable: true
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
      required:
      - carrier
      - identifier
    Transaction-Persona-CollectionRead:
      deprecated: false
      description: ""
      example:
        firstName: John
        lastName: Doe
        id: 0
      properties:
        id:
          readOnly: true
          type: integer
        firstName:
          example: John
          type: string
        lastName:
          example: Doe
          type: string
    Transaction-Persona-Read:
      deprecated: false
      description: ""
      example:
        firstName: John
        lastName: Doe
        mobilePhoneNumber: "+33745214529"
        address: "{}"
        registered: true
        language: fr
        id: 0
        email: john.doe@gmail.com
      properties:
        id:
          readOnly: true
          type: integer
        firstName:
          example: John
          type: string
        lastName:
          example: Doe
          type: string
        language:
          description: "That data is used for rendering the frontend application with\
            \ given language. If not set, will be inferred. Custom codes can be issued\
            \ for specific requirements."
          example: fr
          nullable: true
          type: string
        email:
          example: john.doe@gmail.com
          nullable: true
          type: string
        mobilePhoneNumber:
          example: "+33745214529"
          nullable: true
          type: string
        address:
          deprecated: false
          description: ""
          type: object
        registered:
          description: Determine if the Persona have a Tripartie account
          readOnly: true
          type: boolean
    Transaction-Quote-CollectionRead:
      deprecated: false
      description: ""
      example:
        unitPrice: 3.616076749251911
        sellerTotal: 7.386281948385884
        iri: https://example.com/
        shippingFees: 9.301444
        ulid: ulid
        thirdPartyRecipientAddress: "{}"
        thirdPartyRecipientLastName: thirdPartyRecipientLastName
        attemptUnitPrice: 5.962134
        transactionFees: 7.0614014
        expireAt: 2000-01-23T04:56:07.000+00:00
        originalUnitPrice: 5.637377
        createdAt: 2000-01-23T04:56:07.000+00:00
        quantityToBeAcquired: 1
        buyerTotal: 4.145608029883936
        price: 2.027123023002322
        shippingCarrier: SwissPost
        thirdPartyRecipientFirstName: thirdPartyRecipientFirstName
        pickupCode: pickupCode
        currency: EUR
        originalUnitPriceUnconverted: 2.302136
      properties:
        ulid:
          type: string
        shippingCarrier:
          enum:
          - SwissPost
          - Colissimo
          - MondialRelay
          - null
          nullable: true
          type: string
        pickupCode:
          nullable: true
          type: string
        quantityToBeAcquired:
          default: 1
          example: 1
          type: integer
        attemptUnitPrice:
          format: float
          type: number
        currency:
          default: EUR
          description: Expect 'EUR' only for now.
          example: EUR
          nullable: true
          type: string
        originalUnitPrice:
          format: float
          type: number
        originalUnitPriceUnconverted:
          format: float
          type: number
        transactionFees:
          format: float
          type: number
        shippingFees:
          format: float
          type: number
        thirdPartyRecipientFirstName:
          nullable: true
          type: string
        thirdPartyRecipientLastName:
          nullable: true
          type: string
        thirdPartyRecipientAddress:
          deprecated: false
          description: ""
          type: object
        createdAt:
          format: date-time
          type: string
        expireAt:
          format: date-time
          type: string
        iri:
          example: https://example.com/
          format: iri-reference
          readOnly: true
          type: string
        unitPrice:
          nullable: true
          readOnly: true
          type: number
        price:
          nullable: true
          readOnly: true
          type: number
        buyerTotal:
          description: |-
            The buyer pays for:
             - A) item
             - B) shipping (optional)
             - C) fees     (optional)
            This method sum them automatically.
          nullable: true
          readOnly: true
          type: number
        sellerTotal:
          description: Represent what amount is to be expected released to the seller.
          nullable: true
          readOnly: true
          type: number
      required:
      - createdAt
      - expireAt
      - quantityToBeAcquired
      - ulid
    Transaction-Quote-Read:
      deprecated: false
      description: ""
      example:
        unitPrice: 3.616076749251911
        sellerTotal: 7.386281948385884
        iri: https://example.com/
        shippingFees: 9.301444
        ulid: ulid
        thirdPartyRecipientAddress: "{}"
        thirdPartyRecipientLastName: thirdPartyRecipientLastName
        attemptUnitPrice: 5.962134
        transactionFees: 7.0614014
        expireAt: 2000-01-23T04:56:07.000+00:00
        originalUnitPrice: 5.637377
        createdAt: 2000-01-23T04:56:07.000+00:00
        quantityToBeAcquired: 1
        buyerTotal: 4.145608029883936
        exchangeRate: 0.4455
        price: 2.027123023002322
        shippingCarrier: SwissPost
        thirdPartyRecipientFirstName: thirdPartyRecipientFirstName
        pickupCode: pickupCode
        currency: EUR
        originalUnitPriceUnconverted: 2.302136
      properties:
        ulid:
          type: string
        shippingCarrier:
          enum:
          - SwissPost
          - Colissimo
          - MondialRelay
          - null
          nullable: true
          type: string
        pickupCode:
          nullable: true
          type: string
        quantityToBeAcquired:
          default: 1
          example: 1
          type: integer
        attemptUnitPrice:
          format: float
          type: number
        currency:
          default: EUR
          description: Expect 'EUR' only for now.
          example: EUR
          nullable: true
          type: string
        originalUnitPrice:
          format: float
          type: number
        originalUnitPriceUnconverted:
          format: float
          type: number
        transactionFees:
          format: float
          type: number
        shippingFees:
          format: float
          type: number
        thirdPartyRecipientFirstName:
          nullable: true
          type: string
        thirdPartyRecipientLastName:
          nullable: true
          type: string
        thirdPartyRecipientAddress:
          deprecated: false
          description: ""
          type: object
        createdAt:
          format: date-time
          type: string
        expireAt:
          format: date-time
          type: string
        iri:
          example: https://example.com/
          format: iri-reference
          readOnly: true
          type: string
        unitPrice:
          nullable: true
          readOnly: true
          type: number
        price:
          nullable: true
          readOnly: true
          type: number
        buyerTotal:
          description: |-
            The buyer pays for:
             - A) item
             - B) shipping (optional)
             - C) fees     (optional)
            This method sum them automatically.
          nullable: true
          readOnly: true
          type: number
        sellerTotal:
          description: Represent what amount is to be expected released to the seller.
          nullable: true
          readOnly: true
          type: number
        exchangeRate:
          description: "Exchange rate, if applicable. Between the offer currency and\
            \ actual charged currency."
          example: 0.4455
          nullable: true
          readOnly: true
          type: number
      required:
      - createdAt
      - expireAt
      - quantityToBeAcquired
      - ulid
    Transaction-Read:
      deprecated: false
      description: ""
      example:
        totalFees: 5.025004791520295
        fees: 1.2315135367772556
        ulid: ulid
        remotePayInId: remotePayInId
        rating: 7
        handOverCode: handOverCode
        offer:
          seller:
            firstName: John
            lastName: Doe
            mobilePhoneNumber: "+33745214529"
            address: "{}"
            registered: true
            language: fr
            id: 0
            email: john.doe@gmail.com
          unitPrice: 6.0274563
          metadata:
          - value: "54412"
            key: External-ID
          - value: "54412"
            key: External-ID
          redirectUrl: https://marketplace.tld/offers/that-special-item-i-wish-to-sold?checkout=true
          ulid: ulid
          nature: physical_item
          description: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\
            \ do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\
            \ ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\
            \ ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\
            \ velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\
            \ cupidatat non proident, sunt in culpa qui officia deserunt mollit anim\
            \ id est laborum."
          title: ASUS TUF X570-PLUS GAMING Motherboard
          itemCount: 1
          shippingAllowed: true
          canBeSoldSeparately: true
          handDeliveryAllowed: true
          weightInGram: 1
          medias:
          - https://example.com/
          - https://example.com/
          createdAt: 2000-01-23T04:56:07.000+00:00
          condition: USED
          shippingCarriers:
          - SwissPost
          - SwissPost
          eanCode: "4718017388450"
          publicUrl: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
          currencyCode: EUR
          presetBuyer:
            firstName: John
            lastName: Doe
            mobilePhoneNumber: "+33745214529"
            address: "{}"
            registered: true
            language: fr
            id: 0
            email: john.doe@gmail.com
          status: issued
          updatedAt: 2000-01-23T04:56:07.000+00:00
        createdAt: 2000-01-23T04:56:07.000+00:00
        total: 1.1730742509559433
        quote:
          unitPrice: 3.616076749251911
          sellerTotal: 7.386281948385884
          iri: https://example.com/
          shippingFees: 9.301444
          ulid: ulid
          thirdPartyRecipientAddress: "{}"
          thirdPartyRecipientLastName: thirdPartyRecipientLastName
          attemptUnitPrice: 5.962134
          transactionFees: 7.0614014
          expireAt: 2000-01-23T04:56:07.000+00:00
          originalUnitPrice: 5.637377
          createdAt: 2000-01-23T04:56:07.000+00:00
          quantityToBeAcquired: 1
          buyerTotal: 4.145608029883936
          exchangeRate: 0.4455
          price: 2.027123023002322
          shippingCarrier: SwissPost
          thirdPartyRecipientFirstName: thirdPartyRecipientFirstName
          pickupCode: pickupCode
          currency: EUR
          originalUnitPriceUnconverted: 2.302136
        remotePreAuthorizationId: remotePreAuthorizationId
        review: review
        escrow:
          processorStatus: unallocated
          providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
          providerCreatedAt: 2000-01-23T04:56:07.000+00:00
          providerName: providerName
        providerCreatedAt: 2000-01-23T04:56:07.000+00:00
        providerName: providerName
        updatedAt: 2000-01-23T04:56:07.000+00:00
        balanceToRefund: 1.4894159098541704
        providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
        awaitedParty: BUYER
        totalCharged: 4.965218492984954
        statusExpiration: 2000-01-23T04:56:07.000+00:00
        buyer:
          firstName: John
          lastName: Doe
          mobilePhoneNumber: "+33745214529"
          address: "{}"
          registered: true
          language: fr
          id: 0
          email: john.doe@gmail.com
        buyerMessage: buyerMessage
        processorStatus: unallocated
        supplementalFees: 1.0246457001441578
        forceRefundShipping: true
        feesToRefund: 6.84685269835264
        card:
          processorStatus: unallocated
          providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
          providerCreatedAt: 2000-01-23T04:56:07.000+00:00
          providerName: providerName
        status: CREATED
        parcels:
        - identifier: 8J001271466474
          createdAt: 2000-01-23T04:56:07.000+00:00
          carrier: SwissPost
          historicalSenderAddress: historicalSenderAddress
          historicalRecipientAddress: historicalRecipientAddress
          price: 4.88
          trackingPublicUrl: trackingPublicUrl
          currency: EUR
          labelPublicUrl: labelPublicUrl
          status: CREATED
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - identifier: 8J001271466474
          createdAt: 2000-01-23T04:56:07.000+00:00
          carrier: SwissPost
          historicalSenderAddress: historicalSenderAddress
          historicalRecipientAddress: historicalRecipientAddress
          price: 4.88
          trackingPublicUrl: trackingPublicUrl
          currency: EUR
          labelPublicUrl: labelPublicUrl
          status: CREATED
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        ulid:
          type: string
        offer:
          $ref: '#/components/schemas/Transaction-Offer-Read'
        quote:
          $ref: '#/components/schemas/Transaction-Quote-Read'
        buyerMessage:
          description: Attach a note. Only the buyer can exercise this right. At the
            creation.
          nullable: true
          type: string
        buyer:
          $ref: '#/components/schemas/Transaction-Persona-Read'
        status:
          enum:
          - CREATED
          - AUTHORIZED
          - REFUSED
          - ACCEPTED
          - SHIPPED
          - IN_TRANSIT
          - BLOCKED
          - DELIVERED
          - COMPLETED
          - DISPUTED
          - CANCELLED
          - null
          nullable: true
          type: string
        fees:
          nullable: true
          type: number
        supplementalFees:
          nullable: true
          type: number
        card:
          $ref: '#/components/schemas/Transaction-Card-Read'
        escrow:
          $ref: '#/components/schemas/Transaction-Wallet-Read'
        remotePreAuthorizationId:
          nullable: true
          type: string
        remotePayInId:
          nullable: true
          type: string
        balanceToRefund:
          nullable: true
          type: number
        feesToRefund:
          nullable: true
          type: number
        forceRefundShipping:
          description: "Shipping is never refunded on purpose. Once deposited (parcel),\
            \ we are billed for it."
          nullable: true
          type: boolean
        review:
          nullable: true
          type: string
        rating:
          nullable: true
          type: integer
        handOverCode:
          nullable: true
          type: string
        parcels:
          items:
            $ref: '#/components/schemas/Transaction-Parcel-Read'
          type: array
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          nullable: true
          type: string
        providerName:
          nullable: true
          type: string
        providerCreatedAt:
          format: date-time
          nullable: true
          type: string
        providerUpdatedAt:
          format: date-time
          nullable: true
          type: string
        total:
          readOnly: true
          type: number
        totalCharged:
          readOnly: true
          type: number
        totalFees:
          readOnly: true
          type: number
        awaitedParty:
          description: Determine who is awaited (actor) for the next transition
          enum:
          - BUYER
          - PLATFORM
          - SELLER
          readOnly: true
          type: string
          nullable: true
        statusExpiration:
          description: Yield if eligible the date-time at which the transaction state
            expire.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        processorStatus:
          description: Automagically infer on what state the entity is at the Payment
            Processor.
          enum:
          - unallocated
          - allocating
          - allocated
          - freed
          - outdated
          readOnly: true
          type: string
      required:
      - buyer
      - createdAt
      - offer
      - quote
      - ulid
    Transaction-Update:
      deprecated: false
      description: ""
      properties:
        status:
          enum:
          - CREATED
          - AUTHORIZED
          - REFUSED
          - ACCEPTED
          - SHIPPED
          - IN_TRANSIT
          - BLOCKED
          - DELIVERED
          - COMPLETED
          - DISPUTED
          - CANCELLED
          - null
          nullable: true
          type: string
        supplementalFees:
          nullable: true
          type: number
        balanceToRefund:
          nullable: true
          type: number
        feesToRefund:
          nullable: true
          type: number
        forceRefundShipping:
          description: "Shipping is never refunded on purpose. Once deposited (parcel),\
            \ we are billed for it."
          nullable: true
          type: boolean
        review:
          nullable: true
          type: string
        rating:
          nullable: true
          type: integer
        handOverCodeConfirmation:
          nullable: true
          type: string
        updatedAt:
          format: date-time
          nullable: true
          type: string
    Transaction-Wallet-Read:
      deprecated: false
      description: ""
      example:
        processorStatus: unallocated
        providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
        providerCreatedAt: 2000-01-23T04:56:07.000+00:00
        providerName: providerName
      properties:
        providerName:
          nullable: true
          type: string
        providerCreatedAt:
          format: date-time
          nullable: true
          type: string
        providerUpdatedAt:
          format: date-time
          nullable: true
          type: string
        processorStatus:
          description: Automagically infer on what state the entity is at the Payment
            Processor.
          enum:
          - unallocated
          - allocating
          - allocated
          - freed
          - outdated
          readOnly: true
          type: string
    Transaction-Write:
      deprecated: false
      description: ""
      properties:
        captcha:
          nullable: true
          type: string
        offer:
          example: https://example.com/
          format: iri-reference
          type: string
        quote:
          example: https://example.com/
          format: iri-reference
          type: string
        buyerMessage:
          description: Attach a note. Only the buyer can exercise this right. At the
            creation.
          nullable: true
          type: string
        card:
          example: https://example.com/
          format: iri-reference
          type: string
      required:
      - offer
      - quote
    User:
      deprecated: false
      description: Disable a user account
      type: object
    User-Address-AuthenticatedRead:
      deprecated: false
      description: ""
      example:
        zipCode: "75004"
        buildingName: Electron
        cityName: Paris
        formattedAddress: "118 rue Henry Barbin, 72100 LE MANS, FRANCE"
        countryCode: FRA
        companyName: Company Tld
        secondLine: Apt 6E
        firstLine: 118 avenue des champs élysées
        buildingFloor: Third floor
        gateOrPortalOrInboxCode: "3124"
      properties:
        companyName:
          example: Company Tld
          nullable: true
          type: string
        countryCode:
          example: FRA
          maxLength: 3
          type: string
        zipCode:
          example: "75004"
          type: string
        cityName:
          example: Paris
          type: string
        firstLine:
          example: 118 avenue des champs élysées
          type: string
        secondLine:
          example: Apt 6E
          nullable: true
          type: string
        buildingName:
          example: Electron
          nullable: true
          type: string
        buildingFloor:
          example: Third floor
          nullable: true
          type: string
        gateOrPortalOrInboxCode:
          example: "3124"
          nullable: true
          type: string
        formattedAddress:
          example: "118 rue Henry Barbin, 72100 LE MANS, FRANCE"
          readOnly: true
          type: string
    User-Address-CollectionRead:
      deprecated: false
      description: ""
      example:
        zipCode: "75004"
        buildingName: Electron
        cityName: Paris
        formattedAddress: "118 rue Henry Barbin, 72100 LE MANS, FRANCE"
        countryCode: FRA
        companyName: Company Tld
        secondLine: Apt 6E
        firstLine: 118 avenue des champs élysées
        buildingFloor: Third floor
        gateOrPortalOrInboxCode: "3124"
      properties:
        companyName:
          example: Company Tld
          nullable: true
          type: string
        countryCode:
          example: FRA
          maxLength: 3
          type: string
        zipCode:
          example: "75004"
          type: string
        cityName:
          example: Paris
          type: string
        firstLine:
          example: 118 avenue des champs élysées
          type: string
        secondLine:
          example: Apt 6E
          nullable: true
          type: string
        buildingName:
          example: Electron
          nullable: true
          type: string
        buildingFloor:
          example: Third floor
          nullable: true
          type: string
        gateOrPortalOrInboxCode:
          example: "3124"
          nullable: true
          type: string
        formattedAddress:
          example: "118 rue Henry Barbin, 72100 LE MANS, FRANCE"
          readOnly: true
          type: string
    User-Address-SupportRead:
      deprecated: false
      description: ""
      example:
        zipCode: "75004"
        buildingName: Electron
        cityName: Paris
        formattedAddress: "118 rue Henry Barbin, 72100 LE MANS, FRANCE"
        countryCode: FRA
        companyName: Company Tld
        secondLine: Apt 6E
        firstLine: 118 avenue des champs élysées
        buildingFloor: Third floor
        gateOrPortalOrInboxCode: "3124"
      properties:
        companyName:
          example: Company Tld
          nullable: true
          type: string
        countryCode:
          example: FRA
          maxLength: 3
          type: string
        zipCode:
          example: "75004"
          type: string
        cityName:
          example: Paris
          type: string
        firstLine:
          example: 118 avenue des champs élysées
          type: string
        secondLine:
          example: Apt 6E
          nullable: true
          type: string
        buildingName:
          example: Electron
          nullable: true
          type: string
        buildingFloor:
          example: Third floor
          nullable: true
          type: string
        gateOrPortalOrInboxCode:
          example: "3124"
          nullable: true
          type: string
        formattedAddress:
          example: "118 rue Henry Barbin, 72100 LE MANS, FRANCE"
          readOnly: true
          type: string
    User-Address-Update:
      deprecated: false
      description: ""
      example:
        zipCode: "75004"
        buildingName: Electron
        cityName: Paris
        formattedAddress: "118 rue Henry Barbin, 72100 LE MANS, FRANCE"
        countryCode: FRA
        companyName: Company Tld
        secondLine: Apt 6E
        firstLine: 118 avenue des champs élysées
        buildingFloor: Third floor
        gateOrPortalOrInboxCode: "3124"
      properties:
        companyName:
          example: Company Tld
          nullable: true
          type: string
        countryCode:
          example: FRA
          maxLength: 3
          type: string
        zipCode:
          example: "75004"
          type: string
        cityName:
          example: Paris
          type: string
        firstLine:
          example: 118 avenue des champs élysées
          type: string
        secondLine:
          example: Apt 6E
          nullable: true
          type: string
        buildingName:
          example: Electron
          nullable: true
          type: string
        buildingFloor:
          example: Third floor
          nullable: true
          type: string
        gateOrPortalOrInboxCode:
          example: "3124"
          nullable: true
          type: string
        formattedAddress:
          example: "118 rue Henry Barbin, 72100 LE MANS, FRANCE"
          readOnly: true
          type: string
    User-AuthenticatedRead:
      deprecated: false
      description: ""
      example:
        birthday: 2000-01-23T04:56:07.000+00:00
        lastName: TAHRI
        preferredLanguage: fr
        cards:
        - iri: https://example.com/
          providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
          ephemeral: true
          primaryAccountNumber: primaryAccountNumber
          expireAt: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          processorStatus: unallocated
          countryCode: countryCode
          currency: currency
          providerCreatedAt: 2000-01-23T04:56:07.000+00:00
          brand: VISA
          providerName: providerName
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - iri: https://example.com/
          providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
          ephemeral: true
          primaryAccountNumber: primaryAccountNumber
          expireAt: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          processorStatus: unallocated
          countryCode: countryCode
          currency: currency
          providerCreatedAt: 2000-01-23T04:56:07.000+00:00
          brand: VISA
          providerName: providerName
          updatedAt: 2000-01-23T04:56:07.000+00:00
        roles:
        - ROLE_ORGANIZATION_OWNER
        timeZoneOffset: -60
        identityVerifiedAt: 2000-01-23T04:56:07.000+00:00
        totpEnabled: true
        intlPhoneNumber: "+33700000000"
        createdAt: 2000-01-23T04:56:07.000+00:00
        impersonatingOrganization: true
        publicName: Nickname
        lockdown: true
        lastSuccessfulLogIn: 2000-01-23T04:56:07.000+00:00
        id: 0
        providerCreatedAt: 2000-01-23T04:56:07.000+00:00
        email: john.doe@company.tld
        providerName: providerName
        updatedAt: 2000-01-23T04:56:07.000+00:00
        bankAccount:
          createdAt: 2000-01-23T04:56:07.000+00:00
          processorStatus: unallocated
          providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
          iban: iban
          providerCreatedAt: 2000-01-23T04:56:07.000+00:00
          bic: bic
          providerName: providerName
          updatedAt: 2000-01-23T04:56:07.000+00:00
        iri: https://example.com/
        wallet:
          createdAt: 2000-01-23T04:56:07.000+00:00
          processorStatus: unallocated
          balance: 5.962134
          providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
          currency: currency
          providerCreatedAt: 2000-01-23T04:56:07.000+00:00
          providerName: providerName
          updatedAt: 2000-01-23T04:56:07.000+00:00
        providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
        secondAuthFactor: true
        profiles:
        - organization:
            domainVerified: true
            name: name
            icon:
              publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
              id: 6
            logo:
              publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
              id: 6
            id: 1
        - organization:
            domainVerified: true
            name: name
            icon:
              publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
              id: 6
            logo:
              publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
              id: 6
            id: 1
        avatar:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          id: 6
        mainAddress:
          zipCode: "75004"
          buildingName: Electron
          cityName: Paris
          formattedAddress: "118 rue Henry Barbin, 72100 LE MANS, FRANCE"
          countryCode: FRA
          companyName: Company Tld
          secondLine: Apt 6E
          firstLine: 118 avenue des champs élysées
          buildingFloor: Third floor
          gateOrPortalOrInboxCode: "3124"
        consentMailAds: true
        firstName: Jacob
        processorStatus: unallocated
        organization:
          domainVerified: true
          name: name
          icon:
            publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
            id: 6
          logo:
            publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
            id: 6
          id: 1
        originCountry: FRA
        roleInCompany: Accounting Dpt
        homeCountry: FRA
      properties:
        id:
          readOnly: true
          type: integer
        mainAddress:
          $ref: '#/components/schemas/User-Address-AuthenticatedRead'
        firstName:
          example: Jacob
          type: string
        lastName:
          example: TAHRI
          type: string
        publicName:
          example: Nickname
          nullable: true
          type: string
        roleInCompany:
          example: Accounting Dpt
          nullable: true
          type: string
        birthday:
          format: date-time
          nullable: true
          type: string
        email:
          example: john.doe@company.tld
          type: string
        roles:
          example:
          - ROLE_ORGANIZATION_OWNER
          items:
            enum:
            - ROLE_ORGANIZATION_OWNER
            - ROLE_ADMIN
            - ROLE_CONSULTANT
            - ROLE_ACCOUNTING_MANAGER
            - ROLE_BILLING_MANAGER
            - ROLE_CUSTOMER_SERVICE
            - ROLE_PLATFORM_SUPPORT
            - ROLE_PLATFORM_ADMIN
            - ROLE_USER
            type: string
          type: array
        totpEnabled:
          type: boolean
        intlPhoneNumber:
          example: "+33700000000"
          nullable: true
          type: string
        originCountry:
          description: The nationality of the current user.
          example: FRA
          maxLength: 3
          nullable: true
          type: string
        homeCountry:
          description: The originating country
          example: FRA
          maxLength: 3
          nullable: true
          type: string
        preferredLanguage:
          example: fr
          maxLength: 2
          nullable: true
          type: string
        lastSuccessfulLogIn:
          format: date-time
          nullable: true
          type: string
        avatar:
          $ref: '#/components/schemas/User-Media-AuthenticatedRead'
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        consentMailAds:
          type: boolean
        lockdown:
          type: boolean
        timeZoneOffset:
          description: Timezone offset. Expressed in minutes. Used for DT conversion
            and fraud prevention.
          example: -60
          nullable: true
          type: integer
        organization:
          $ref: '#/components/schemas/User-Organization-AuthenticatedRead'
        bankAccount:
          $ref: '#/components/schemas/User-BankAccount-AuthenticatedRead'
        identityVerifiedAt:
          format: date-time
          nullable: true
          type: string
        profiles:
          items:
            $ref: '#/components/schemas/User-Persona-AuthenticatedRead'
          type: array
        cards:
          items:
            $ref: '#/components/schemas/User-Card-AuthenticatedRead'
          type: array
        wallet:
          $ref: '#/components/schemas/User-Wallet-AuthenticatedRead'
        providerName:
          nullable: true
          type: string
        providerCreatedAt:
          format: date-time
          nullable: true
          type: string
        providerUpdatedAt:
          format: date-time
          nullable: true
          type: string
        iri:
          example: https://example.com/
          format: iri-reference
          readOnly: true
          type: string
        impersonatingOrganization:
          readOnly: true
          type: boolean
        secondAuthFactor:
          readOnly: true
          type: boolean
        processorStatus:
          description: Automagically infer on what state the entity is at the Payment
            Processor.
          enum:
          - unallocated
          - allocating
          - allocated
          - freed
          - outdated
          readOnly: true
          type: string
      required:
      - consentMailAds
      - lockdown
      - profiles
      - roles
    User-BankAccount-AuthenticatedRead:
      deprecated: false
      description: ""
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        processorStatus: unallocated
        providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
        iban: iban
        providerCreatedAt: 2000-01-23T04:56:07.000+00:00
        bic: bic
        providerName: providerName
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        iban:
          type: string
        bic:
          nullable: true
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          nullable: true
          type: string
        providerName:
          nullable: true
          type: string
        providerCreatedAt:
          format: date-time
          nullable: true
          type: string
        providerUpdatedAt:
          format: date-time
          nullable: true
          type: string
        processorStatus:
          description: Automagically infer on what state the entity is at the Payment
            Processor.
          enum:
          - unallocated
          - allocating
          - allocated
          - freed
          - outdated
          readOnly: true
          type: string
      required:
      - createdAt
    User-Card-AuthenticatedRead:
      deprecated: false
      description: ""
      example:
        iri: https://example.com/
        providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
        ephemeral: true
        primaryAccountNumber: primaryAccountNumber
        expireAt: 2000-01-23T04:56:07.000+00:00
        createdAt: 2000-01-23T04:56:07.000+00:00
        processorStatus: unallocated
        countryCode: countryCode
        currency: currency
        providerCreatedAt: 2000-01-23T04:56:07.000+00:00
        brand: VISA
        providerName: providerName
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        primaryAccountNumber:
          nullable: true
          type: string
        expireAt:
          format: date-time
          type: string
        currency:
          nullable: true
          type: string
        countryCode:
          nullable: true
          type: string
        brand:
          enum:
          - CB
          - VISA
          - MASTERCARD
          - AMEX
          - MAESTRO
          - BCMC
          - JCB
          - DISCOVER
          example: VISA
          type: string
          nullable: true
        ephemeral:
          default: true
          example: true
          type: boolean
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        providerName:
          nullable: true
          type: string
        providerCreatedAt:
          format: date-time
          nullable: true
          type: string
        providerUpdatedAt:
          format: date-time
          nullable: true
          type: string
        iri:
          example: https://example.com/
          format: iri-reference
          readOnly: true
          type: string
        processorStatus:
          description: Automagically infer on what state the entity is at the Payment
            Processor.
          enum:
          - unallocated
          - allocating
          - allocated
          - freed
          - outdated
          readOnly: true
          type: string
      required:
      - createdAt
      - expireAt
      - updatedAt
    User-CollectionRead:
      deprecated: false
      description: ""
      example:
        lastName: TAHRI
        iri: https://example.com/
        wallet:
          createdAt: 2000-01-23T04:56:07.000+00:00
          processorStatus: unallocated
          balance: 1.4658129
          providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
          externalId: externalId
          currency: currency
          providerCreatedAt: 2000-01-23T04:56:07.000+00:00
          providerName: providerName
          updatedAt: 2000-01-23T04:56:07.000+00:00
        providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
        secondAuthFactor: true
        roles:
        - ROLE_ORGANIZATION_OWNER
        timeZoneOffset: -60
        externalId: externalId
        avatar:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          id: 6
        mainAddress:
          zipCode: "75004"
          buildingName: Electron
          cityName: Paris
          formattedAddress: "118 rue Henry Barbin, 72100 LE MANS, FRANCE"
          countryCode: FRA
          companyName: Company Tld
          secondLine: Apt 6E
          firstLine: 118 avenue des champs élysées
          buildingFloor: Third floor
          gateOrPortalOrInboxCode: "3124"
        totpEnabled: true
        intlPhoneNumber: "+33700000000"
        firstName: Jacob
        createdAt: 2000-01-23T04:56:07.000+00:00
        processorStatus: unallocated
        publicName: Nickname
        organization:
          name: name
          id: 6
        lastSuccessfulLogIn: 2000-01-23T04:56:07.000+00:00
        id: 0
        roleInCompany: Accounting Dpt
        providerCreatedAt: 2000-01-23T04:56:07.000+00:00
        email: john.doe@company.tld
        providerName: providerName
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          readOnly: true
          type: integer
        mainAddress:
          $ref: '#/components/schemas/User-Address-CollectionRead'
        firstName:
          example: Jacob
          type: string
        lastName:
          example: TAHRI
          type: string
        publicName:
          example: Nickname
          nullable: true
          type: string
        roleInCompany:
          example: Accounting Dpt
          nullable: true
          type: string
        email:
          example: john.doe@company.tld
          type: string
        roles:
          example:
          - ROLE_ORGANIZATION_OWNER
          items:
            enum:
            - ROLE_ORGANIZATION_OWNER
            - ROLE_ADMIN
            - ROLE_CONSULTANT
            - ROLE_ACCOUNTING_MANAGER
            - ROLE_BILLING_MANAGER
            - ROLE_CUSTOMER_SERVICE
            - ROLE_PLATFORM_SUPPORT
            - ROLE_PLATFORM_ADMIN
            - ROLE_USER
            type: string
          type: array
        totpEnabled:
          type: boolean
        intlPhoneNumber:
          example: "+33700000000"
          nullable: true
          type: string
        lastSuccessfulLogIn:
          format: date-time
          nullable: true
          type: string
        avatar:
          $ref: '#/components/schemas/User-Media-CollectionRead'
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        timeZoneOffset:
          description: Timezone offset. Expressed in minutes. Used for DT conversion
            and fraud prevention.
          example: -60
          nullable: true
          type: integer
        organization:
          $ref: '#/components/schemas/User-Organization-CollectionRead'
        wallet:
          $ref: '#/components/schemas/User-Wallet-CollectionRead'
        externalId:
          nullable: true
          type: string
        providerName:
          nullable: true
          type: string
        providerCreatedAt:
          format: date-time
          nullable: true
          type: string
        providerUpdatedAt:
          format: date-time
          nullable: true
          type: string
        iri:
          example: https://example.com/
          format: iri-reference
          readOnly: true
          type: string
        secondAuthFactor:
          readOnly: true
          type: boolean
        processorStatus:
          description: Automagically infer on what state the entity is at the Payment
            Processor.
          enum:
          - unallocated
          - allocating
          - allocated
          - freed
          - outdated
          readOnly: true
          type: string
      required:
      - roles
    User-EmailValidationWrite:
      deprecated: false
      description: ""
      properties:
        captcha:
          nullable: true
          type: string
        plainPassword:
          example: secr$t
          maxLength: 64
          minLength: 6
          nullable: true
          type: string
          nullable: true
        emailVerificationInput:
          maxLength: 128
          minLength: 128
          nullable: true
          type: string
      required:
      - captcha
      - emailVerificationInput
    User-Invite:
      deprecated: false
      description: ""
      properties:
        firstName:
          example: Jacob
          maxLength: 64
          minLength: 1
          type: string
        lastName:
          example: TAHRI
          maxLength: 64
          minLength: 1
          type: string
        email:
          example: john.doe@company.tld
          externalDocs:
            url: https://schema.org/email
          format: email
          maxLength: 180
          type: string
        invitedRole:
          example: ROLE_ADMIN
          items:
            enum:
            - ROLE_ADMIN
            - ROLE_CONSULTANT
            - ROLE_ACCOUNTING_MANAGER
            - ROLE_BILLING_MANAGER
            - ROLE_CUSTOMER_SERVICE
            - ROLE_PLATFORM_ADMIN
            - ROLE_PLATFORM_SUPPORT
            - ROLE_ORGANIZATION_OWNER
            - ROLE_USER
            type: string
          type: array
      required:
      - email
      - firstName
      - invitedRole
      - lastName
    User-Media-AuthenticatedRead:
      deprecated: false
      description: ""
      example:
        publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
        id: 6
      properties:
        id:
          readOnly: true
          type: integer
        publicUrl:
          example: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          externalDocs:
            url: https://schema.org/url
          format: uri
          type: string
      required:
      - publicUrl
    User-Media-CollectionRead:
      deprecated: false
      description: ""
      example:
        publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
        id: 6
      properties:
        id:
          readOnly: true
          type: integer
        publicUrl:
          example: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          externalDocs:
            url: https://schema.org/url
          format: uri
          type: string
      required:
      - publicUrl
    User-Media-Read:
      deprecated: false
      description: ""
      example:
        publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
        id: 6
      properties:
        id:
          readOnly: true
          type: integer
        publicUrl:
          example: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          externalDocs:
            url: https://schema.org/url
          format: uri
          type: string
      required:
      - publicUrl
    User-Media-SupportRead:
      deprecated: false
      description: ""
      example:
        publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
        id: 6
      properties:
        id:
          readOnly: true
          type: integer
        publicUrl:
          example: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          externalDocs:
            url: https://schema.org/url
          format: uri
          type: string
      required:
      - publicUrl
    User-Organization-AuthenticatedRead:
      deprecated: false
      description: ""
      example:
        domainVerified: true
        name: name
        icon:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          id: 6
        logo:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          id: 6
        id: 1
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
        domainVerified:
          type: boolean
        icon:
          $ref: '#/components/schemas/User-Media-AuthenticatedRead'
        logo:
          $ref: '#/components/schemas/User-Media-AuthenticatedRead'
      required:
      - domainVerified
    User-Organization-CollectionRead:
      deprecated: false
      description: ""
      example:
        name: name
        id: 6
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
    User-Organization-Read:
      deprecated: false
      description: ""
      example:
        domainVerified: true
        name: name
        icon:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          id: 6
        logo:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          id: 6
        id: 0
      properties:
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 64
          type: string
        domainVerified:
          type: boolean
        icon:
          $ref: '#/components/schemas/User-Media-Read'
        logo:
          $ref: '#/components/schemas/User-Media-Read'
      required:
      - name
    User-Organization-SupportRead:
      deprecated: false
      description: ""
      example:
        name: name
        id: 6
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
    User-Persona-AuthenticatedRead:
      deprecated: false
      description: ""
      example:
        organization:
          domainVerified: true
          name: name
          icon:
            publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
            id: 6
          logo:
            publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
            id: 6
          id: 1
      properties:
        organization:
          $ref: '#/components/schemas/User-Organization-AuthenticatedRead'
    User-PostRegisterRead:
      deprecated: false
      description: ""
      example:
        iri: https://example.com/
        id: 0
      properties:
        id:
          readOnly: true
          type: integer
        iri:
          example: https://example.com/
          format: iri-reference
          readOnly: true
          type: string
    User-SupportRead:
      deprecated: false
      description: ""
      example:
        lastName: TAHRI
        iri: https://example.com/
        wallet:
          createdAt: 2000-01-23T04:56:07.000+00:00
          processorStatus: unallocated
          balance: 1.4658129
          providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
          externalId: externalId
          currency: currency
          providerCreatedAt: 2000-01-23T04:56:07.000+00:00
          providerName: providerName
          updatedAt: 2000-01-23T04:56:07.000+00:00
        providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
        secondAuthFactor: true
        roles:
        - ROLE_ORGANIZATION_OWNER
        timeZoneOffset: -60
        externalId: externalId
        avatar:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          id: 6
        mainAddress:
          zipCode: "75004"
          buildingName: Electron
          cityName: Paris
          formattedAddress: "118 rue Henry Barbin, 72100 LE MANS, FRANCE"
          countryCode: FRA
          companyName: Company Tld
          secondLine: Apt 6E
          firstLine: 118 avenue des champs élysées
          buildingFloor: Third floor
          gateOrPortalOrInboxCode: "3124"
        totpEnabled: true
        intlPhoneNumber: "+33700000000"
        firstName: Jacob
        createdAt: 2000-01-23T04:56:07.000+00:00
        processorStatus: unallocated
        publicName: Nickname
        organization:
          name: name
          id: 6
        lastSuccessfulLogIn: 2000-01-23T04:56:07.000+00:00
        id: 0
        roleInCompany: Accounting Dpt
        providerCreatedAt: 2000-01-23T04:56:07.000+00:00
        email: john.doe@company.tld
        providerName: providerName
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          readOnly: true
          type: integer
        mainAddress:
          $ref: '#/components/schemas/User-Address-SupportRead'
        firstName:
          example: Jacob
          type: string
        lastName:
          example: TAHRI
          type: string
        publicName:
          example: Nickname
          nullable: true
          type: string
        roleInCompany:
          example: Accounting Dpt
          nullable: true
          type: string
        email:
          example: john.doe@company.tld
          type: string
        roles:
          example:
          - ROLE_ORGANIZATION_OWNER
          items:
            enum:
            - ROLE_ORGANIZATION_OWNER
            - ROLE_ADMIN
            - ROLE_CONSULTANT
            - ROLE_ACCOUNTING_MANAGER
            - ROLE_BILLING_MANAGER
            - ROLE_CUSTOMER_SERVICE
            - ROLE_PLATFORM_SUPPORT
            - ROLE_PLATFORM_ADMIN
            - ROLE_USER
            type: string
          type: array
        totpEnabled:
          type: boolean
        intlPhoneNumber:
          example: "+33700000000"
          nullable: true
          type: string
        lastSuccessfulLogIn:
          format: date-time
          nullable: true
          type: string
        avatar:
          $ref: '#/components/schemas/User-Media-SupportRead'
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        timeZoneOffset:
          description: Timezone offset. Expressed in minutes. Used for DT conversion
            and fraud prevention.
          example: -60
          nullable: true
          type: integer
        organization:
          $ref: '#/components/schemas/User-Organization-SupportRead'
        wallet:
          $ref: '#/components/schemas/User-Wallet-SupportRead'
        externalId:
          nullable: true
          type: string
        providerName:
          nullable: true
          type: string
        providerCreatedAt:
          format: date-time
          nullable: true
          type: string
        providerUpdatedAt:
          format: date-time
          nullable: true
          type: string
        iri:
          example: https://example.com/
          format: iri-reference
          readOnly: true
          type: string
        secondAuthFactor:
          readOnly: true
          type: boolean
        processorStatus:
          description: Automagically infer on what state the entity is at the Payment
            Processor.
          enum:
          - unallocated
          - allocating
          - allocated
          - freed
          - outdated
          readOnly: true
          type: string
      required:
      - roles
    User-TotpSetupRead:
      deprecated: false
      description: ""
      example:
        totpUri: totpUri
      properties:
        totpUri:
          nullable: true
          type: string
    User-TotpSetupWrite:
      deprecated: false
      description: ""
      type: object
    User-TotpToggleRead:
      deprecated: false
      description: ""
      type: object
    User-TotpToggleWrite:
      deprecated: false
      description: ""
      properties:
        totpEnabled:
          type: boolean
        totpChallenge:
          nullable: true
          type: string
      required:
      - totpChallenge
      - totpEnabled
    User-Update:
      deprecated: false
      description: ""
      properties:
        mainAddress:
          $ref: '#/components/schemas/User-Address-Update'
        firstName:
          example: Jacob
          type: string
        lastName:
          example: TAHRI
          type: string
        publicName:
          example: Nickname
          nullable: true
          type: string
        roleInCompany:
          example: Accounting Dpt
          nullable: true
          type: string
        birthday:
          format: date-time
          nullable: true
          type: string
        intlPhoneNumber:
          example: "+33700000000"
          nullable: true
          type: string
        originCountry:
          description: The nationality of the current user.
          example: FRA
          maxLength: 3
          nullable: true
          type: string
        homeCountry:
          description: The originating country
          example: FRA
          maxLength: 3
          nullable: true
          type: string
        preferredLanguage:
          example: fr
          maxLength: 2
          nullable: true
          type: string
        consentMailAds:
          type: boolean
        timeZoneOffset:
          description: Timezone offset. Expressed in minutes. Used for DT conversion
            and fraud prevention.
          example: -60
          nullable: true
          type: integer
      required:
      - consentMailAds
    User-UserEmailUpdate:
      deprecated: false
      description: ""
      properties:
        email:
          example: john.doe@company.tld
          externalDocs:
            url: https://schema.org/email
          format: email
          maxLength: 180
          type: string
        plainPassword:
          example: secr$t
          maxLength: 64
          minLength: 6
          nullable: true
          type: string
      required:
      - email
      - plainPassword
    User-UserEnableWrite:
      deprecated: false
      description: Enable a previously deactivated user account
      type: object
    User-UserPasswordUpdate:
      deprecated: false
      description: ""
      properties:
        plainPassword:
          example: secr$t
          maxLength: 64
          minLength: 6
          nullable: true
          type: string
        newPassword:
          example: new-secr$t
          maxLength: 64
          minLength: 6
          nullable: true
          type: string
      required:
      - newPassword
      - plainPassword
    User-UserRead:
      deprecated: false
      description: ""
      example:
        birthday: 2000-01-23T04:56:07.000+00:00
        lastName: TAHRI
        preferredLanguage: fr
        cards:
        - iri: https://example.com/
          providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
          ephemeral: true
          primaryAccountNumber: primaryAccountNumber
          expireAt: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          processorStatus: unallocated
          countryCode: countryCode
          currency: currency
          providerCreatedAt: 2000-01-23T04:56:07.000+00:00
          brand: VISA
          providerName: providerName
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - iri: https://example.com/
          providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
          ephemeral: true
          primaryAccountNumber: primaryAccountNumber
          expireAt: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          processorStatus: unallocated
          countryCode: countryCode
          currency: currency
          providerCreatedAt: 2000-01-23T04:56:07.000+00:00
          brand: VISA
          providerName: providerName
          updatedAt: 2000-01-23T04:56:07.000+00:00
        roles:
        - ROLE_ORGANIZATION_OWNER
        timeZoneOffset: -60
        identityVerifiedAt: 2000-01-23T04:56:07.000+00:00
        totpEnabled: true
        intlPhoneNumber: "+33700000000"
        createdAt: 2000-01-23T04:56:07.000+00:00
        impersonatingOrganization: true
        publicName: Nickname
        lockdown: true
        lastSuccessfulLogIn: 2000-01-23T04:56:07.000+00:00
        id: 0
        providerCreatedAt: 2000-01-23T04:56:07.000+00:00
        email: john.doe@company.tld
        providerName: providerName
        updatedAt: 2000-01-23T04:56:07.000+00:00
        bankAccount:
          createdAt: 2000-01-23T04:56:07.000+00:00
          processorStatus: unallocated
          providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
          iban: iban
          providerCreatedAt: 2000-01-23T04:56:07.000+00:00
          bic: bic
          providerName: providerName
          updatedAt: 2000-01-23T04:56:07.000+00:00
        iri: https://example.com/
        wallet:
          createdAt: 2000-01-23T04:56:07.000+00:00
          processorStatus: unallocated
          balance: 5.962134
          providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
          currency: currency
          providerCreatedAt: 2000-01-23T04:56:07.000+00:00
          providerName: providerName
          updatedAt: 2000-01-23T04:56:07.000+00:00
        providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
        secondAuthFactor: true
        profiles:
        - organization:
            domainVerified: true
            name: name
            icon:
              publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
              id: 6
            logo:
              publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
              id: 6
            id: 6
        - organization:
            domainVerified: true
            name: name
            icon:
              publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
              id: 6
            logo:
              publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
              id: 6
            id: 6
        avatar:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          id: 6
        mainAddress:
          zipCode: "75004"
          buildingName: Electron
          cityName: Paris
          formattedAddress: "118 rue Henry Barbin, 72100 LE MANS, FRANCE"
          countryCode: FRA
          companyName: Company Tld
          secondLine: Apt 6E
          firstLine: 118 avenue des champs élysées
          buildingFloor: Third floor
          gateOrPortalOrInboxCode: "3124"
        consentMailAds: true
        firstName: Jacob
        processorStatus: unallocated
        organization:
          domainVerified: true
          name: name
          icon:
            publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
            id: 6
          logo:
            publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
            id: 6
          id: 6
        originCountry: FRA
        roleInCompany: Accounting Dpt
        homeCountry: FRA
      properties:
        id:
          readOnly: true
          type: integer
        mainAddress:
          $ref: '#/components/schemas/Address-UserRead'
        firstName:
          example: Jacob
          type: string
        lastName:
          example: TAHRI
          type: string
        publicName:
          example: Nickname
          nullable: true
          type: string
        roleInCompany:
          example: Accounting Dpt
          nullable: true
          type: string
        birthday:
          format: date-time
          nullable: true
          type: string
        email:
          example: john.doe@company.tld
          externalDocs:
            url: https://schema.org/email
          format: email
          maxLength: 180
          type: string
        roles:
          example:
          - ROLE_ORGANIZATION_OWNER
          items:
            enum:
            - ROLE_ORGANIZATION_OWNER
            - ROLE_ADMIN
            - ROLE_CONSULTANT
            - ROLE_ACCOUNTING_MANAGER
            - ROLE_BILLING_MANAGER
            - ROLE_CUSTOMER_SERVICE
            - ROLE_PLATFORM_SUPPORT
            - ROLE_PLATFORM_ADMIN
            - ROLE_USER
            type: string
          type: array
        totpEnabled:
          type: boolean
        intlPhoneNumber:
          example: "+33700000000"
          nullable: true
          type: string
        originCountry:
          description: The nationality of the current user.
          example: FRA
          nullable: true
          type: string
        homeCountry:
          description: The originating country
          example: FRA
          nullable: true
          type: string
        preferredLanguage:
          example: fr
          nullable: true
          type: string
        lastSuccessfulLogIn:
          format: date-time
          nullable: true
          type: string
        avatar:
          $ref: '#/components/schemas/Media-UserRead'
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        consentMailAds:
          type: boolean
        lockdown:
          type: boolean
        timeZoneOffset:
          description: Timezone offset. Expressed in minutes. Used for DT conversion
            and fraud prevention.
          example: -60
          nullable: true
          type: integer
        organization:
          $ref: '#/components/schemas/Organization-UserRead'
        bankAccount:
          $ref: '#/components/schemas/BankAccount-UserRead'
        identityVerifiedAt:
          format: date-time
          nullable: true
          type: string
        profiles:
          items:
            $ref: '#/components/schemas/Persona-UserRead'
          type: array
        cards:
          items:
            $ref: '#/components/schemas/Card-UserRead'
          type: array
        wallet:
          $ref: '#/components/schemas/Wallet-UserRead'
        providerName:
          nullable: true
          type: string
        providerCreatedAt:
          format: date-time
          nullable: true
          type: string
        providerUpdatedAt:
          format: date-time
          nullable: true
          type: string
        iri:
          example: https://example.com/
          format: iri-reference
          readOnly: true
          type: string
        impersonatingOrganization:
          readOnly: true
          type: boolean
        secondAuthFactor:
          readOnly: true
          type: boolean
        processorStatus:
          description: Automagically infer on what state the entity is at the Payment
            Processor.
          enum:
          - unallocated
          - allocating
          - allocated
          - freed
          - outdated
          readOnly: true
          type: string
      required:
      - email
    User-Wallet-AuthenticatedRead:
      deprecated: false
      description: ""
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        processorStatus: unallocated
        balance: 5.962134
        providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
        currency: currency
        providerCreatedAt: 2000-01-23T04:56:07.000+00:00
        providerName: providerName
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        balance:
          format: float
          type: number
        currency:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        providerName:
          nullable: true
          type: string
        providerCreatedAt:
          format: date-time
          nullable: true
          type: string
        providerUpdatedAt:
          format: date-time
          nullable: true
          type: string
        processorStatus:
          description: Automagically infer on what state the entity is at the Payment
            Processor.
          enum:
          - unallocated
          - allocating
          - allocated
          - freed
          - outdated
          readOnly: true
          type: string
      required:
      - createdAt
      - currency
      - updatedAt
    User-Wallet-CollectionRead:
      deprecated: false
      description: ""
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        processorStatus: unallocated
        balance: 1.4658129
        providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
        externalId: externalId
        currency: currency
        providerCreatedAt: 2000-01-23T04:56:07.000+00:00
        providerName: providerName
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        balance:
          format: float
          type: number
        currency:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        externalId:
          nullable: true
          type: string
        providerName:
          nullable: true
          type: string
        providerCreatedAt:
          format: date-time
          nullable: true
          type: string
        providerUpdatedAt:
          format: date-time
          nullable: true
          type: string
        processorStatus:
          description: Automagically infer on what state the entity is at the Payment
            Processor.
          enum:
          - unallocated
          - allocating
          - allocated
          - freed
          - outdated
          readOnly: true
          type: string
      required:
      - createdAt
      - currency
      - updatedAt
    User-Wallet-SupportRead:
      deprecated: false
      description: ""
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        processorStatus: unallocated
        balance: 1.4658129
        providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
        externalId: externalId
        currency: currency
        providerCreatedAt: 2000-01-23T04:56:07.000+00:00
        providerName: providerName
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        balance:
          format: float
          type: number
        currency:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        externalId:
          nullable: true
          type: string
        providerName:
          nullable: true
          type: string
        providerCreatedAt:
          format: date-time
          nullable: true
          type: string
        providerUpdatedAt:
          format: date-time
          nullable: true
          type: string
        processorStatus:
          description: Automagically infer on what state the entity is at the Payment
            Processor.
          enum:
          - unallocated
          - allocating
          - allocated
          - freed
          - outdated
          readOnly: true
          type: string
      required:
      - createdAt
      - currency
      - updatedAt
    User-Write:
      deprecated: false
      description: ""
      properties:
        captcha:
          nullable: true
          type: string
        firstName:
          example: Jacob
          maxLength: 64
          minLength: 1
          type: string
        lastName:
          example: TAHRI
          maxLength: 64
          minLength: 1
          type: string
        publicName:
          example: Nickname
          maxLength: 32
          minLength: 2
          nullable: true
          type: string
        roleInCompany:
          example: Accounting Dpt
          maxLength: 32
          minLength: 2
          nullable: true
          type: string
        birthday:
          format: date-time
          nullable: true
          type: string
        email:
          example: john.doe@company.tld
          externalDocs:
            url: https://schema.org/email
          format: email
          maxLength: 180
          type: string
        plainPassword:
          example: secr$t
          maxLength: 64
          minLength: 6
          nullable: true
          type: string
        intlPhoneNumber:
          example: "+33700000000"
          nullable: true
          type: string
        originCountry:
          description: The nationality of the current user.
          example: FRA
          nullable: true
          type: string
        homeCountry:
          description: The originating country
          example: FRA
          nullable: true
          type: string
        preferredLanguage:
          example: fr
          nullable: true
          type: string
        consentMailAds:
          type: boolean
        timeZoneOffset:
          description: Timezone offset. Expressed in minutes. Used for DT conversion
            and fraud prevention.
          example: -60
          nullable: true
          type: integer
      required:
      - birthday
      - captcha
      - email
      - firstName
      - homeCountry
      - lastName
      - originCountry
      - plainPassword
    User-user.subscribed:
      deprecated: false
      description: Disable a user account
      example:
        iri: https://example.com/
        id: 0
      properties:
        id:
          readOnly: true
          type: integer
        iri:
          example: https://example.com/
          format: iri-reference
          readOnly: true
          type: string
    View:
      deprecated: false
      description: ""
      properties:
        id:
          readOnly: true
          type: integer
        ipAddress:
          type: string
        offer:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        transaction:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        user:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        hitCount:
          default: 1
          example: 1
          type: integer
        createdAt:
          format: date-time
          readOnly: true
          type: string
        namedSource:
          enum:
          - BUYER
          - PLATFORM
          - SELLER
          - OTHER
          readOnly: true
          type: string
          nullable: true
      required:
      - hitCount
      - ipAddress
    Wallet-UserRead:
      deprecated: false
      description: ""
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        processorStatus: unallocated
        balance: 5.962134
        providerUpdatedAt: 2000-01-23T04:56:07.000+00:00
        currency: currency
        providerCreatedAt: 2000-01-23T04:56:07.000+00:00
        providerName: providerName
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        balance:
          format: float
          type: number
        currency:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        providerName:
          nullable: true
          type: string
        providerCreatedAt:
          format: date-time
          nullable: true
          type: string
        providerUpdatedAt:
          format: date-time
          nullable: true
          type: string
        processorStatus:
          description: Automagically infer on what state the entity is at the Payment
            Processor.
          enum:
          - unallocated
          - allocating
          - allocated
          - freed
          - outdated
          readOnly: true
          type: string
      required:
      - createdAt
      - currency
      - updatedAt
    WebhookHistory:
      deprecated: false
      description: ""
      type: object
    WebhookHistory-CollectionRead:
      deprecated: false
      description: ""
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        occurredAt: 2000-01-23T04:56:07.000+00:00
        inProgress: true
        retryCount: 1
        id: 0
        event: offer.transaction.authorized
        objectId: objectId
        responseCode: 6
        attemptedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          readOnly: true
          type: integer
        objectId:
          nullable: true
          type: string
        event:
          enum:
          - offer.transaction.authorized
          - offer.transaction.accepted
          - offer.transaction.shipped
          - offer.transaction.delivered
          - offer.transaction.completed
          - offer.transaction.canceled
          - offer.transaction.disputed
          - offer.closed
          - persona.added
          type: string
        responseCode:
          nullable: true
          type: integer
        occurredAt:
          format: date-time
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        attemptedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        retryCount:
          type: integer
        inProgress:
          readOnly: true
          type: boolean
      required:
      - event
      - occurredAt
      - retryCount
    WebhookHistory-Read:
      deprecated: false
      description: ""
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        occurredAt: 2000-01-23T04:56:07.000+00:00
        responseBody: responseBody
        inProgress: true
        normalizedObject:
        - normalizedObject
        - normalizedObject
        retryCount: 1
        id: 0
        event: offer.transaction.authorized
        objectId: objectId
        url: url
        responseCode: 6
        attemptedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          readOnly: true
          type: integer
        objectId:
          nullable: true
          type: string
        event:
          enum:
          - offer.transaction.authorized
          - offer.transaction.accepted
          - offer.transaction.shipped
          - offer.transaction.delivered
          - offer.transaction.completed
          - offer.transaction.canceled
          - offer.transaction.disputed
          - offer.closed
          - persona.added
          type: string
        url:
          type: string
        normalizedObject:
          items:
            type: string
          type: array
        responseCode:
          nullable: true
          type: integer
        responseBody:
          nullable: true
          type: string
        occurredAt:
          format: date-time
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        attemptedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        retryCount:
          type: integer
        inProgress:
          readOnly: true
          type: boolean
      required:
      - event
      - occurredAt
      - retryCount
      - url
    WebhookSubscription-Read:
      deprecated: false
      description: ""
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        callbackUrl: https://company.tld/webhook/tripartie
        id: 0
        event: offer.transaction.authorized
        webhookSecret: webhookSecret
      properties:
        id:
          readOnly: true
          type: integer
        event:
          enum:
          - offer.transaction.authorized
          - offer.transaction.accepted
          - offer.transaction.shipped
          - offer.transaction.delivered
          - offer.transaction.completed
          - offer.transaction.canceled
          - offer.transaction.disputed
          - offer.closed
          - persona.added
          - null
          nullable: true
          type: string
        callbackUrl:
          example: https://company.tld/webhook/tripartie
          type: string
        webhookSecret:
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
      required:
      - webhookSecret
    WebhookSubscription-Write:
      deprecated: false
      description: ""
      properties:
        event:
          enum:
          - offer.transaction.authorized
          - offer.transaction.accepted
          - offer.transaction.shipped
          - offer.transaction.delivered
          - offer.transaction.completed
          - offer.transaction.canceled
          - offer.transaction.disputed
          - offer.closed
          - persona.added
          - null
          nullable: true
          type: string
        callbackUrl:
          example: https://company.tld/webhook/tripartie
          externalDocs:
            url: https://schema.org/url
          format: uri
          maxLength: 5000
          minLength: 4
          type: string
      required:
      - callbackUrl
    Webhook:
      example:
        iri: iri
        occurredAt: 2000-01-23T04:56:07.000+00:00
        id: 122541
        event: offer.closed
        objectId: 01ARZ3NDEKTSV4RRFFQ69G5FAV
        object:
          seller:
            registered: true
          redirectUrl: https://marketplace.tld/offers/that-special-item-i-wish-to-sold?checkout=true
          ulid: ulid
          description: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\
            \ do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\
            \ ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\
            \ ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\
            \ velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\
            \ cupidatat non proident, sunt in culpa qui officia deserunt mollit anim\
            \ id est laborum."
          title: ASUS TUF X570-PLUS GAMING Motherboard
          canBeSoldSeparately: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          eanCode: "4718017388450"
          presetBuyer:
            registered: true
          updatedAt: 2000-01-23T04:56:07.000+00:00
          unitPrice: 0.8008282
          iri: https://example.com/
          nature: physical_item
          url: https://next.tripartie.app/?c=01ARZ3NDEKTSV4RRFFQ69G5FAV
          itemCount: 1
          shippingAllowed: true
          handDeliveryAllowed: true
          weightInGram: 6
          medias:
          - publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
            id: 6
          - publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
            id: 6
          condition: USED
          shippingCarriers:
          - SwissPost
          - SwissPost
          organization:
            websiteUrl: websiteUrl
            name: name
            icon:
              publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
              id: 6
            primaryColor: primaryColor
            logo:
              publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
              id: 6
            customBaseUrl: customBaseUrl
          publicUrl: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
          currencyCode: EUR
          status: issued
      properties:
        id:
          example: 122541
          type: integer
        event:
          enum:
          - offer.transaction.authorized
          - offer.transaction.accepted
          - offer.transaction.shipped
          - offer.transaction.delivered
          - offer.transaction.completed
          - offer.transaction.canceled
          - offer.transaction.disputed
          - offer.closed
          - persona.added
          example: offer.closed
          type: string
        objectId:
          example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
        iri:
          format: iri
          type: string
        occurredAt:
          format: date-time
          type: string
        object:
          $ref: '#/components/schemas/Webhook_object'
    AuthError:
      example:
        code: 401
        message: JWT Token not found
      properties:
        code:
          example: 401
          type: integer
        message:
          example: JWT Token not found
          type: string
    MessageError:
      example:
        message: email or password mismatch
      properties:
        message:
          example: email or password mismatch
          type: string
    NotFoundError:
      description: This error can occurs when you reference objects in the query that
        does not exist.
      example:
        detail: Not Found
        type: https://tools.ietf.org/html/rfc2616#section-10
        title: An error occurred
      properties:
        type:
          example: https://tools.ietf.org/html/rfc2616#section-10
          type: string
        title:
          example: An error occurred
          type: string
        detail:
          example: Not Found
          type: string
    GenericError:
      example:
        detail: An internal error occurred that prevented us to fulfill the request
        type: https://tools.ietf.org/html/rfc2616#section-10
        title: An error occurred
      properties:
        type:
          example: https://tools.ietf.org/html/rfc2616#section-10
          type: string
        title:
          example: An error occurred
          type: string
        detail:
          example: An internal error occurred that prevented us to fulfill the request
          type: string
    AccessError:
      example:
        detail: Access denied
        type: https://tools.ietf.org/html/rfc2616#section-10
        title: An error occurred
      properties:
        type:
          example: https://tools.ietf.org/html/rfc2616#section-10
          type: string
        title:
          example: An error occurred
          type: string
        detail:
          example: Access denied
          type: string
    InvalidQueryError:
      example:
        detail: The request is malformed and therefore cannot be executed
        type: https://tools.ietf.org/html/rfc2616#section-10
        title: An error occurred
      properties:
        type:
          example: https://tools.ietf.org/html/rfc2616#section-10
          type: string
        title:
          example: An error occurred
          type: string
        detail:
          example: The request is malformed and therefore cannot be executed
          type: string
    RateLimitError:
      example:
        detail: Too many request
        type: https://tools.ietf.org/html/rfc2616#section-10
        title: An error occurred
      properties:
        type:
          example: https://tools.ietf.org/html/rfc2616#section-10
          type: string
        title:
          example: An error occurred
          type: string
        detail:
          example: Too many request
          type: string
    UnprocessableEntity:
      example:
        violations:
        - code: c1051bb4-d103-4f74-8988-acbcafc7fdc3
          propertyPath: firstName
          message: This value should not be blank.
        - code: c1051bb4-d103-4f74-8988-acbcafc7fdc3
          propertyPath: firstName
          message: This value should not be blank.
        detail: |-
          firstName: This value should not be blank.
          lastName: This value should not be blank.
          email: This value should not be null.
          plainPassword: This value should not be null.
          originCountry: This value should not be null.
          preferredLanguage: This value should not be null.
        type: https://tools.ietf.org/html/rfc2616#section-10
        title: An error occurred
      properties:
        type:
          example: https://tools.ietf.org/html/rfc2616#section-10
          type: string
        title:
          example: An error occurred
          type: string
        detail:
          example: |-
            firstName: This value should not be blank.
            lastName: This value should not be blank.
            email: This value should not be null.
            plainPassword: This value should not be null.
            originCountry: This value should not be null.
            preferredLanguage: This value should not be null.
          type: string
        violations:
          items:
            $ref: '#/components/schemas/UnprocessableEntity_violations_inner'
          type: array
    UserJwtCreated:
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      properties:
        token:
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
          type: string
          nullable: false
    UserJwtWrite:
      example:
        password: p@ssw0rd
        captcha: 23aa3ff98df2457d958a6f9e5c48cfa5
        totpInput: "412541"
        email: john.doe@company.tld
      properties:
        captcha:
          example: 23aa3ff98df2457d958a6f9e5c48cfa5
          type: string
          nullable: false
        email:
          example: john.doe@company.tld
          type: string
          nullable: false
        password:
          example: p@ssw0rd
          type: string
          nullable: false
        totpInput:
          example: "412541"
          type: string
          nullable: true
    api_offers_ulidmedias_post_request:
      properties:
        file:
          format: binary
          type: string
    Webhook_object:
      anyOf:
      - $ref: '#/components/schemas/Offer-Read'
      - $ref: '#/components/schemas/Persona-Read'
      nullable: false
    UnprocessableEntity_violations_inner:
      example:
        code: c1051bb4-d103-4f74-8988-acbcafc7fdc3
        propertyPath: firstName
        message: This value should not be blank.
      properties:
        propertyPath:
          example: firstName
          type: string
        message:
          example: This value should not be blank.
          type: string
        code:
          example: c1051bb4-d103-4f74-8988-acbcafc7fdc3
          format: identifier
          type: string
  securitySchemes:
    oauth:
      description: OAuth 2.0 application Grant
      flows:
        clientCredentials:
          scopes:
            OFFER_READ: Read-only operations on safe-checkout offers
            OFFER_WRITE: Write permissions on safe-checkout offers
            ORGANIZATION_READ: Read organization details and stats
            PERSONA_READ: Read operations on the shared user-base knowledge
            PERSONA_WRITE: Write permissions on the shared user-base knowledge
            PERSONA_AUTH: Capability to issue short-term lived authenticated URL
          tokenUrl: /token
      type: oauth2
    jwtPersonalKey:
      description: Value for the Authorization header parameter.
      in: header
      name: Authorization
      type: apiKey

